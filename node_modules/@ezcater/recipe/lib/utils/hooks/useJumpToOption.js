"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = require("react");

var useJumpToOption = function useJumpToOption(inputRef, _ref) {
  var options = _ref.options,
      move = _ref.move;
  var keys = (0, _react.useRef)('');
  var timeout = (0, _react.useRef)(null);
  (0, _react.useEffect)(function () {
    var el = inputRef.current;

    var onKeyDown = function onKeyDown(event) {
      clearTimeout(timeout.current);
      if (event.key === ' ' && !keys.current) return;
      if (!/^[a-z0-9_-\s]$/i.test(event.key)) return;
      event.stopPropagation();
      event.preventDefault();
      keys.current += event.key;
      if (!keys.current) return;
      var searchText = keys.current.toLowerCase(); // first try a full match on what the user typed

      var option = options.find(function (o) {
        return o.label.toLowerCase().startsWith(searchText);
      });
      if (option) move(option);
      timeout.current = setTimeout(function () {
        keys.current = '';
      }, 600);
    };

    el.addEventListener('keydown', onKeyDown);
    return function () {
      return el.removeEventListener('keydown', onKeyDown);
    };
  }, [inputRef, keys, options, move]);
};

var _default = useJumpToOption;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy91dGlscy9ob29rcy91c2VKdW1wVG9PcHRpb24udHMiXSwibmFtZXMiOlsidXNlSnVtcFRvT3B0aW9uIiwiaW5wdXRSZWYiLCJvcHRpb25zIiwibW92ZSIsImtleXMiLCJ0aW1lb3V0IiwiZWwiLCJjdXJyZW50Iiwib25LZXlEb3duIiwiZXZlbnQiLCJjbGVhclRpbWVvdXQiLCJrZXkiLCJ0ZXN0Iiwic3RvcFByb3BhZ2F0aW9uIiwicHJldmVudERlZmF1bHQiLCJzZWFyY2hUZXh0IiwidG9Mb3dlckNhc2UiLCJvcHRpb24iLCJmaW5kIiwibyIsImxhYmVsIiwic3RhcnRzV2l0aCIsInNldFRpbWVvdXQiLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBLElBQU1BLGVBQWUsR0FBRyxTQUFsQkEsZUFBa0IsQ0FBQ0MsUUFBRCxRQUE2RDtBQUFBLE1BQW5CQyxPQUFtQixRQUFuQkEsT0FBbUI7QUFBQSxNQUFWQyxJQUFVLFFBQVZBLElBQVU7QUFDbkYsTUFBTUMsSUFBSSxHQUFHLG1CQUFPLEVBQVAsQ0FBYjtBQUNBLE1BQU1DLE9BQU8sR0FBRyxtQkFBTyxJQUFQLENBQWhCO0FBRUEsd0JBQVUsWUFBTTtBQUNkLFFBQU1DLEVBQUUsR0FBR0wsUUFBUSxDQUFDTSxPQUFwQjs7QUFFQSxRQUFNQyxTQUFTLEdBQUcsU0FBWkEsU0FBWSxDQUFDQyxLQUFELEVBQTBCO0FBQzFDQyxNQUFBQSxZQUFZLENBQUNMLE9BQU8sQ0FBQ0UsT0FBVCxDQUFaO0FBRUEsVUFBSUUsS0FBSyxDQUFDRSxHQUFOLEtBQWMsR0FBZCxJQUFxQixDQUFDUCxJQUFJLENBQUNHLE9BQS9CLEVBQXdDO0FBRXhDLFVBQUksQ0FBQyxrQkFBa0JLLElBQWxCLENBQXVCSCxLQUFLLENBQUNFLEdBQTdCLENBQUwsRUFBd0M7QUFFeENGLE1BQUFBLEtBQUssQ0FBQ0ksZUFBTjtBQUNBSixNQUFBQSxLQUFLLENBQUNLLGNBQU47QUFDQVYsTUFBQUEsSUFBSSxDQUFDRyxPQUFMLElBQWdCRSxLQUFLLENBQUNFLEdBQXRCO0FBRUEsVUFBSSxDQUFDUCxJQUFJLENBQUNHLE9BQVYsRUFBbUI7QUFFbkIsVUFBTVEsVUFBVSxHQUFHWCxJQUFJLENBQUNHLE9BQUwsQ0FBYVMsV0FBYixFQUFuQixDQWIwQyxDQWUxQzs7QUFDQSxVQUFNQyxNQUFNLEdBQUdmLE9BQU8sQ0FBQ2dCLElBQVIsQ0FBYSxVQUFBQyxDQUFDO0FBQUEsZUFBSUEsQ0FBQyxDQUFDQyxLQUFGLENBQVFKLFdBQVIsR0FBc0JLLFVBQXRCLENBQWlDTixVQUFqQyxDQUFKO0FBQUEsT0FBZCxDQUFmO0FBRUEsVUFBSUUsTUFBSixFQUFZZCxJQUFJLENBQUNjLE1BQUQsQ0FBSjtBQUVaWixNQUFBQSxPQUFPLENBQUNFLE9BQVIsR0FBa0JlLFVBQVUsQ0FBQyxZQUFNO0FBQ2pDbEIsUUFBQUEsSUFBSSxDQUFDRyxPQUFMLEdBQWUsRUFBZjtBQUNELE9BRjJCLEVBRXpCLEdBRnlCLENBQTVCO0FBR0QsS0F2QkQ7O0FBeUJBRCxJQUFBQSxFQUFFLENBQUNpQixnQkFBSCxDQUFvQixTQUFwQixFQUErQmYsU0FBL0I7QUFDQSxXQUFPO0FBQUEsYUFBTUYsRUFBRSxDQUFDa0IsbUJBQUgsQ0FBdUIsU0FBdkIsRUFBa0NoQixTQUFsQyxDQUFOO0FBQUEsS0FBUDtBQUNELEdBOUJELEVBOEJHLENBQUNQLFFBQUQsRUFBV0csSUFBWCxFQUFpQkYsT0FBakIsRUFBMEJDLElBQTFCLENBOUJIO0FBK0JELENBbkNEOztlQXFDZUgsZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwge3VzZUVmZmVjdCwgdXNlUmVmfSBmcm9tICdyZWFjdCc7XG5cbmNvbnN0IHVzZUp1bXBUb09wdGlvbiA9IChpbnB1dFJlZjogUmVhY3QuUmVmT2JqZWN0PEhUTUxFbGVtZW50Piwge29wdGlvbnMsIG1vdmV9KSA9PiB7XG4gIGNvbnN0IGtleXMgPSB1c2VSZWYoJycpO1xuICBjb25zdCB0aW1lb3V0ID0gdXNlUmVmKG51bGwpO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgZWwgPSBpbnB1dFJlZi5jdXJyZW50O1xuXG4gICAgY29uc3Qgb25LZXlEb3duID0gKGV2ZW50OiBLZXlib2FyZEV2ZW50KSA9PiB7XG4gICAgICBjbGVhclRpbWVvdXQodGltZW91dC5jdXJyZW50KTtcblxuICAgICAgaWYgKGV2ZW50LmtleSA9PT0gJyAnICYmICFrZXlzLmN1cnJlbnQpIHJldHVybjtcblxuICAgICAgaWYgKCEvXlthLXowLTlfLVxcc10kL2kudGVzdChldmVudC5rZXkpKSByZXR1cm47XG5cbiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIGtleXMuY3VycmVudCArPSBldmVudC5rZXk7XG5cbiAgICAgIGlmICgha2V5cy5jdXJyZW50KSByZXR1cm47XG5cbiAgICAgIGNvbnN0IHNlYXJjaFRleHQgPSBrZXlzLmN1cnJlbnQudG9Mb3dlckNhc2UoKTtcblxuICAgICAgLy8gZmlyc3QgdHJ5IGEgZnVsbCBtYXRjaCBvbiB3aGF0IHRoZSB1c2VyIHR5cGVkXG4gICAgICBjb25zdCBvcHRpb24gPSBvcHRpb25zLmZpbmQobyA9PiBvLmxhYmVsLnRvTG93ZXJDYXNlKCkuc3RhcnRzV2l0aChzZWFyY2hUZXh0KSk7XG5cbiAgICAgIGlmIChvcHRpb24pIG1vdmUob3B0aW9uKTtcblxuICAgICAgdGltZW91dC5jdXJyZW50ID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGtleXMuY3VycmVudCA9ICcnO1xuICAgICAgfSwgNjAwKTtcbiAgICB9O1xuXG4gICAgZWwuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIG9uS2V5RG93bik7XG4gICAgcmV0dXJuICgpID0+IGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBvbktleURvd24pO1xuICB9LCBbaW5wdXRSZWYsIGtleXMsIG9wdGlvbnMsIG1vdmVdKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVzZUp1bXBUb09wdGlvbjtcbiJdfQ==