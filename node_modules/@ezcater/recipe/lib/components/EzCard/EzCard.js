"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _EzCard = require("./EzCard.styles");

var _EzLink = _interopRequireDefault(require("../EzLink"));

var _EzCardFooter = _interopRequireDefault(require("./EzCardFooter"));

var _EzCardSection = _interopRequireDefault(require("./EzCardSection"));

var _utils = require("../../utils");

var _EzHeading = _interopRequireDefault(require("../EzHeading"));

function isEzCardSection(element) {
  var _element$type;

  return (element === null || element === void 0 ? void 0 : (_element$type = element.type) === null || _element$type === void 0 ? void 0 : _element$type.displayName) === 'EzCardSection';
}

function wrappedChildren(children) {
  if (isEzCardSection((children === null || children === void 0 ? void 0 : children[0]) || children)) return children;
  return _react["default"].createElement(_EzCardSection["default"], null, children);
}

var isExpandableCardFooter = function isExpandableCardFooter(expandable) {
  return expandable && expandable.expandLabel !== undefined;
};
/**
 * Cards are the primary means of grouping sections on a page.
 */


var EzCard = function EzCard(_ref) {
  var title = _ref.title,
      subtitle = _ref.subtitle,
      accent = _ref.accent,
      actions = _ref.actions,
      expandable = _ref.expandable,
      props = (0, _objectWithoutProperties2["default"])(_ref, ["title", "subtitle", "accent", "actions", "expandable"]);

  var heading = title && _react["default"].createElement(_EzHeading["default"], {
    size: "3",
    subheading: subtitle
  }, title);

  var layout = actions && _react["default"].createElement(_EzCard.CardLayout, null, _react["default"].createElement("div", null, heading), _react["default"].createElement("div", null, actions));

  var horizontal = props.horizontal,
      children = props.children;
  return _react["default"].createElement(_EzCard.CardContainer, (0, _extends2["default"])({}, (0, _utils.filterValidProps)(props), {
    accent: accent
  }), title && _react["default"].createElement(_EzCard.CardHeadingContainer, null, actions ? layout : heading), _react["default"].createElement(_EzCard.SectionContainer, {
    horizontal: horizontal
  }, wrappedChildren(children)), isExpandableCardFooter(expandable) && _react["default"].createElement(_EzCardFooter["default"], null, _react["default"].createElement(_EzLink["default"], {
    href: "#",
    onClick: expandable.onClick
  }, expandable.isExpanded && expandable.collapseLabel ? expandable.collapseLabel : expandable.expandLabel)));
};

EzCard.displayName = 'EzCard';
/**
 * @component
 */

var _default = EzCard;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0V6Q2FyZC9FekNhcmQudHN4Il0sIm5hbWVzIjpbImlzRXpDYXJkU2VjdGlvbiIsImVsZW1lbnQiLCJ0eXBlIiwiZGlzcGxheU5hbWUiLCJ3cmFwcGVkQ2hpbGRyZW4iLCJjaGlsZHJlbiIsImlzRXhwYW5kYWJsZUNhcmRGb290ZXIiLCJleHBhbmRhYmxlIiwiZXhwYW5kTGFiZWwiLCJ1bmRlZmluZWQiLCJFekNhcmQiLCJ0aXRsZSIsInN1YnRpdGxlIiwiYWNjZW50IiwiYWN0aW9ucyIsInByb3BzIiwiaGVhZGluZyIsImxheW91dCIsImhvcml6b250YWwiLCJvbkNsaWNrIiwiaXNFeHBhbmRlZCIsImNvbGxhcHNlTGFiZWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQSxTQUFTQSxlQUFULENBQXlCQyxPQUF6QixFQUFrQztBQUFBOztBQUNoQyxTQUFPLENBQUFBLE9BQU8sU0FBUCxJQUFBQSxPQUFPLFdBQVAsNkJBQUFBLE9BQU8sQ0FBRUMsSUFBVCxnRUFBZUMsV0FBZixNQUErQixlQUF0QztBQUNEOztBQUVELFNBQVNDLGVBQVQsQ0FBeUJDLFFBQXpCLEVBQW1DO0FBQ2pDLE1BQUlMLGVBQWUsQ0FBQyxDQUFBSyxRQUFRLFNBQVIsSUFBQUEsUUFBUSxXQUFSLFlBQUFBLFFBQVEsQ0FBRyxDQUFILENBQVIsS0FBaUJBLFFBQWxCLENBQW5CLEVBQWdELE9BQU9BLFFBQVA7QUFFaEQsU0FBTyxnQ0FBQyx5QkFBRCxRQUFnQkEsUUFBaEIsQ0FBUDtBQUNEOztBQTJCRCxJQUFNQyxzQkFBc0IsR0FBRyxTQUF6QkEsc0JBQXlCLENBQUNDLFVBQUQ7QUFBQSxTQUM3QkEsVUFBVSxJQUFLQSxVQUFELENBQXFDQyxXQUFyQyxLQUFxREMsU0FEdEM7QUFBQSxDQUEvQjtBQUdBOzs7OztBQUdBLElBQU1DLE1BQTJCLEdBQUcsU0FBOUJBLE1BQThCLE9BQThEO0FBQUEsTUFBNURDLEtBQTRELFFBQTVEQSxLQUE0RDtBQUFBLE1BQXJEQyxRQUFxRCxRQUFyREEsUUFBcUQ7QUFBQSxNQUEzQ0MsTUFBMkMsUUFBM0NBLE1BQTJDO0FBQUEsTUFBbkNDLE9BQW1DLFFBQW5DQSxPQUFtQztBQUFBLE1BQTFCUCxVQUEwQixRQUExQkEsVUFBMEI7QUFBQSxNQUFYUSxLQUFXOztBQUNoRyxNQUFNQyxPQUFPLEdBQUdMLEtBQUssSUFDbkIsZ0NBQUMscUJBQUQ7QUFBVyxJQUFBLElBQUksRUFBQyxHQUFoQjtBQUFvQixJQUFBLFVBQVUsRUFBRUM7QUFBaEMsS0FDR0QsS0FESCxDQURGOztBQU1BLE1BQU1NLE1BQU0sR0FBR0gsT0FBTyxJQUNwQixnQ0FBQyxrQkFBRCxRQUNFLDZDQUFNRSxPQUFOLENBREYsRUFFRSw2Q0FBTUYsT0FBTixDQUZGLENBREY7O0FBUGdHLE1BY3pGSSxVQWR5RixHQWNqRUgsS0FkaUUsQ0FjekZHLFVBZHlGO0FBQUEsTUFjN0ViLFFBZDZFLEdBY2pFVSxLQWRpRSxDQWM3RVYsUUFkNkU7QUFnQmhHLFNBQ0UsZ0NBQUMscUJBQUQsZ0NBQW1CLDZCQUFpQlUsS0FBakIsQ0FBbkI7QUFBNEMsSUFBQSxNQUFNLEVBQUVGO0FBQXBELE1BQ0dGLEtBQUssSUFBSSxnQ0FBQyw0QkFBRCxRQUF1QkcsT0FBTyxHQUFHRyxNQUFILEdBQVlELE9BQTFDLENBRFosRUFFRSxnQ0FBQyx3QkFBRDtBQUFrQixJQUFBLFVBQVUsRUFBRUU7QUFBOUIsS0FBMkNkLGVBQWUsQ0FBQ0MsUUFBRCxDQUExRCxDQUZGLEVBR0dDLHNCQUFzQixDQUFDQyxVQUFELENBQXRCLElBQ0MsZ0NBQUMsd0JBQUQsUUFDRSxnQ0FBQyxrQkFBRDtBQUFRLElBQUEsSUFBSSxFQUFDLEdBQWI7QUFBaUIsSUFBQSxPQUFPLEVBQUVBLFVBQVUsQ0FBQ1k7QUFBckMsS0FDR1osVUFBVSxDQUFDYSxVQUFYLElBQXlCYixVQUFVLENBQUNjLGFBQXBDLEdBQ0dkLFVBQVUsQ0FBQ2MsYUFEZCxHQUVHZCxVQUFVLENBQUNDLFdBSGpCLENBREYsQ0FKSixDQURGO0FBZUQsQ0EvQkQ7O0FBaUNBRSxNQUFNLENBQUNQLFdBQVAsR0FBcUIsUUFBckI7QUFFQTs7OztlQUdlTyxNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7Q2FyZENvbnRhaW5lciwgQ2FyZEhlYWRpbmdDb250YWluZXIsIFNlY3Rpb25Db250YWluZXIsIENhcmRMYXlvdXR9IGZyb20gJy4vRXpDYXJkLnN0eWxlcyc7XG5pbXBvcnQgRXpMaW5rIGZyb20gJy4uL0V6TGluayc7XG5pbXBvcnQgRXpDYXJkRm9vdGVyIGZyb20gJy4vRXpDYXJkRm9vdGVyJztcbmltcG9ydCBFekNhcmRTZWN0aW9uIGZyb20gJy4vRXpDYXJkU2VjdGlvbic7XG5pbXBvcnQge2ZpbHRlclZhbGlkUHJvcHN9IGZyb20gJy4uLy4uL3V0aWxzJztcbmltcG9ydCBFekhlYWRpbmcgZnJvbSAnLi4vRXpIZWFkaW5nJztcblxuZnVuY3Rpb24gaXNFekNhcmRTZWN0aW9uKGVsZW1lbnQpIHtcbiAgcmV0dXJuIGVsZW1lbnQ/LnR5cGU/LmRpc3BsYXlOYW1lID09PSAnRXpDYXJkU2VjdGlvbic7XG59XG5cbmZ1bmN0aW9uIHdyYXBwZWRDaGlsZHJlbihjaGlsZHJlbikge1xuICBpZiAoaXNFekNhcmRTZWN0aW9uKGNoaWxkcmVuPy5bMF0gfHwgY2hpbGRyZW4pKSByZXR1cm4gY2hpbGRyZW47XG5cbiAgcmV0dXJuIDxFekNhcmRTZWN0aW9uPntjaGlsZHJlbn08L0V6Q2FyZFNlY3Rpb24+O1xufVxuXG50eXBlIEFjdGlvbnNQcm9wcyA9IHtcbiAgYWN0aW9uczogUmVhY3QuUmVhY3ROb2RlO1xuICB0aXRsZTogc3RyaW5nO1xufTtcblxudHlwZSBPcHRpb25hbFRpdGxlID0ge1xuICBhY3Rpb25zPzogbmV2ZXI7XG4gIHRpdGxlPzogc3RyaW5nO1xufTtcblxudHlwZSBFeHBhbmRhYmxlQ2FyZEZvb3RlciA9IHtcbiAgZXhwYW5kTGFiZWw6IHN0cmluZztcbiAgY29sbGFwc2VMYWJlbDogc3RyaW5nO1xuICBvbkNsaWNrOiBSZWFjdC5Nb3VzZUV2ZW50SGFuZGxlcjtcbiAgaXNFeHBhbmRlZD86IGJvb2xlYW47XG59O1xuXG50eXBlIENhcmRQcm9wcyA9IChBY3Rpb25zUHJvcHMgfCBPcHRpb25hbFRpdGxlKSAmIHtcbiAgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZTtcbiAgaG9yaXpvbnRhbD86IGJvb2xlYW47XG4gIHN1YnRpdGxlPzogc3RyaW5nO1xuICBhY2NlbnQ/OiAnaW5mbyc7XG4gIGV4cGFuZGFibGU/OiBFeHBhbmRhYmxlQ2FyZEZvb3Rlcjtcbn07XG5cbmNvbnN0IGlzRXhwYW5kYWJsZUNhcmRGb290ZXIgPSAoZXhwYW5kYWJsZTogYW55KTogZXhwYW5kYWJsZSBpcyBFeHBhbmRhYmxlQ2FyZEZvb3RlciA9PlxuICBleHBhbmRhYmxlICYmIChleHBhbmRhYmxlIGFzIEV4cGFuZGFibGVDYXJkRm9vdGVyKS5leHBhbmRMYWJlbCAhPT0gdW5kZWZpbmVkO1xuXG4vKipcbiAqIENhcmRzIGFyZSB0aGUgcHJpbWFyeSBtZWFucyBvZiBncm91cGluZyBzZWN0aW9ucyBvbiBhIHBhZ2UuXG4gKi9cbmNvbnN0IEV6Q2FyZDogUmVhY3QuRkM8Q2FyZFByb3BzPiA9ICh7dGl0bGUsIHN1YnRpdGxlLCBhY2NlbnQsIGFjdGlvbnMsIGV4cGFuZGFibGUsIC4uLnByb3BzfSkgPT4ge1xuICBjb25zdCBoZWFkaW5nID0gdGl0bGUgJiYgKFxuICAgIDxFekhlYWRpbmcgc2l6ZT1cIjNcIiBzdWJoZWFkaW5nPXtzdWJ0aXRsZX0+XG4gICAgICB7dGl0bGV9XG4gICAgPC9FekhlYWRpbmc+XG4gICk7XG5cbiAgY29uc3QgbGF5b3V0ID0gYWN0aW9ucyAmJiAoXG4gICAgPENhcmRMYXlvdXQ+XG4gICAgICA8ZGl2PntoZWFkaW5nfTwvZGl2PlxuICAgICAgPGRpdj57YWN0aW9uc308L2Rpdj5cbiAgICA8L0NhcmRMYXlvdXQ+XG4gICk7XG5cbiAgY29uc3Qge2hvcml6b250YWwsIGNoaWxkcmVufSA9IHByb3BzO1xuXG4gIHJldHVybiAoXG4gICAgPENhcmRDb250YWluZXIgey4uLmZpbHRlclZhbGlkUHJvcHMocHJvcHMpfSBhY2NlbnQ9e2FjY2VudH0+XG4gICAgICB7dGl0bGUgJiYgPENhcmRIZWFkaW5nQ29udGFpbmVyPnthY3Rpb25zID8gbGF5b3V0IDogaGVhZGluZ308L0NhcmRIZWFkaW5nQ29udGFpbmVyPn1cbiAgICAgIDxTZWN0aW9uQ29udGFpbmVyIGhvcml6b250YWw9e2hvcml6b250YWx9Pnt3cmFwcGVkQ2hpbGRyZW4oY2hpbGRyZW4pfTwvU2VjdGlvbkNvbnRhaW5lcj5cbiAgICAgIHtpc0V4cGFuZGFibGVDYXJkRm9vdGVyKGV4cGFuZGFibGUpICYmIChcbiAgICAgICAgPEV6Q2FyZEZvb3Rlcj5cbiAgICAgICAgICA8RXpMaW5rIGhyZWY9XCIjXCIgb25DbGljaz17ZXhwYW5kYWJsZS5vbkNsaWNrfT5cbiAgICAgICAgICAgIHtleHBhbmRhYmxlLmlzRXhwYW5kZWQgJiYgZXhwYW5kYWJsZS5jb2xsYXBzZUxhYmVsXG4gICAgICAgICAgICAgID8gZXhwYW5kYWJsZS5jb2xsYXBzZUxhYmVsXG4gICAgICAgICAgICAgIDogZXhwYW5kYWJsZS5leHBhbmRMYWJlbH1cbiAgICAgICAgICA8L0V6TGluaz5cbiAgICAgICAgPC9FekNhcmRGb290ZXI+XG4gICAgICApfVxuICAgIDwvQ2FyZENvbnRhaW5lcj5cbiAgKTtcbn07XG5cbkV6Q2FyZC5kaXNwbGF5TmFtZSA9ICdFekNhcmQnO1xuXG4vKipcbiAqIEBjb21wb25lbnRcbiAqL1xuZXhwb3J0IGRlZmF1bHQgRXpDYXJkO1xuIl19