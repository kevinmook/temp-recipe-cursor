"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _react = _interopRequireDefault(require("react"));

var _jestAxe = require("jest-axe");

var _sosia = require("sosia");

var _react2 = require("@testing-library/react");

var _EzSegmentedControl = _interopRequireDefault(require("../EzSegmentedControl.md"));

var _EzSegmentedControl2 = _interopRequireDefault(require("../EzSegmentedControl"));

var _jestGlobals = require("../../../jest-globals");

var scope = {
  EzSegmentedControl: _EzSegmentedControl2["default"]
};
describe('EzSegmentedControl', function () {
  (0, _sosia.visualSnapshots)({
    markdown: _EzSegmentedControl["default"],
    scope: scope
  });
  describe('onChange', function () {
    it('triggers onChange when segment is clicked', function () {
      var onChangeSpy = jest.fn();

      var _fullRender = (0, _jestGlobals.fullRender)(_react["default"].createElement(_EzSegmentedControl2["default"], {
        name: "test-segment",
        label: "test segment",
        active: "firstValue",
        className: "test",
        labelPosition: "left",
        onChange: onChangeSpy,
        options: [{
          label: 'first',
          value: 'firstValue'
        }, {
          label: 'second',
          value: 'secondValue'
        }, {
          label: 'third',
          value: 'thirdValue'
        }]
      })),
          getByText = _fullRender.getByText;

      _react2.fireEvent.click(getByText('third'));

      expect(onChangeSpy).toHaveBeenCalledWith('thirdValue');
    });
  });
  it('should meet accessibility guidelines',
  /*#__PURE__*/
  (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee() {
    var onChangeSpy, wrapper, actual;
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            onChangeSpy = jest.fn();
            wrapper = (0, _jestGlobals.renderToHtml)(_react["default"].createElement(_EzSegmentedControl2["default"], {
              name: "test-segment",
              label: "accessibility test",
              active: "firstValue",
              className: "test",
              labelPosition: "left",
              onChange: onChangeSpy,
              options: [{
                label: 'first',
                value: 'firstValue'
              }, {
                label: 'second',
                value: 'secondValue'
              }, {
                label: 'third',
                value: 'thirdValue'
              }]
            }));
            _context.next = 4;
            return (0, _jestAxe.axe)(wrapper);

          case 4:
            actual = _context.sent;
            expect(actual).toHaveNoViolations();

          case 6:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  })));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0V6U2VnbWVudGVkQ29udHJvbC9fX3Rlc3RzX18vRXpTZWdtZW50ZWRDb250cm9sLnRlc3QudHN4Il0sIm5hbWVzIjpbInNjb3BlIiwiRXpTZWdtZW50ZWRDb250cm9sIiwiZGVzY3JpYmUiLCJtYXJrZG93biIsIml0Iiwib25DaGFuZ2VTcHkiLCJqZXN0IiwiZm4iLCJsYWJlbCIsInZhbHVlIiwiZ2V0QnlUZXh0IiwiZmlyZUV2ZW50IiwiY2xpY2siLCJleHBlY3QiLCJ0b0hhdmVCZWVuQ2FsbGVkV2l0aCIsIndyYXBwZXIiLCJhY3R1YWwiLCJ0b0hhdmVOb1Zpb2xhdGlvbnMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUEsSUFBTUEsS0FBSyxHQUFHO0FBQUNDLEVBQUFBLGtCQUFrQixFQUFsQkE7QUFBRCxDQUFkO0FBRUFDLFFBQVEsQ0FBQyxvQkFBRCxFQUF1QixZQUFNO0FBQ25DLDhCQUFnQjtBQUFDQyxJQUFBQSxRQUFRLEVBQVJBLDhCQUFEO0FBQVdILElBQUFBLEtBQUssRUFBTEE7QUFBWCxHQUFoQjtBQUVBRSxFQUFBQSxRQUFRLENBQUMsVUFBRCxFQUFhLFlBQU07QUFDekJFLElBQUFBLEVBQUUsQ0FBQywyQ0FBRCxFQUE4QyxZQUFNO0FBQ3BELFVBQU1DLFdBQW9DLEdBQUdDLElBQUksQ0FBQ0MsRUFBTCxFQUE3Qzs7QUFEb0Qsd0JBR2hDLDZCQUNsQixnQ0FBQywrQkFBRDtBQUNFLFFBQUEsSUFBSSxFQUFDLGNBRFA7QUFFRSxRQUFBLEtBQUssRUFBQyxjQUZSO0FBR0UsUUFBQSxNQUFNLEVBQUMsWUFIVDtBQUlFLFFBQUEsU0FBUyxFQUFDLE1BSlo7QUFLRSxRQUFBLGFBQWEsRUFBQyxNQUxoQjtBQU1FLFFBQUEsUUFBUSxFQUFFRixXQU5aO0FBT0UsUUFBQSxPQUFPLEVBQUUsQ0FDUDtBQUFDRyxVQUFBQSxLQUFLLEVBQUUsT0FBUjtBQUFpQkMsVUFBQUEsS0FBSyxFQUFFO0FBQXhCLFNBRE8sRUFFUDtBQUFDRCxVQUFBQSxLQUFLLEVBQUUsUUFBUjtBQUFrQkMsVUFBQUEsS0FBSyxFQUFFO0FBQXpCLFNBRk8sRUFHUDtBQUFDRCxVQUFBQSxLQUFLLEVBQUUsT0FBUjtBQUFpQkMsVUFBQUEsS0FBSyxFQUFFO0FBQXhCLFNBSE87QUFQWCxRQURrQixDQUhnQztBQUFBLFVBRzdDQyxTQUg2QyxlQUc3Q0EsU0FINkM7O0FBbUJwREMsd0JBQVVDLEtBQVYsQ0FBZ0JGLFNBQVMsQ0FBQyxPQUFELENBQXpCOztBQUVBRyxNQUFBQSxNQUFNLENBQUNSLFdBQUQsQ0FBTixDQUFvQlMsb0JBQXBCLENBQXlDLFlBQXpDO0FBQ0QsS0F0QkMsQ0FBRjtBQXVCRCxHQXhCTyxDQUFSO0FBMEJBVixFQUFBQSxFQUFFLENBQUMsc0NBQUQ7QUFBQTtBQUFBO0FBQUE7QUFBQSwrQkFBeUM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ25DQyxZQUFBQSxXQURtQyxHQUNJQyxJQUFJLENBQUNDLEVBQUwsRUFESjtBQUduQ1EsWUFBQUEsT0FIbUMsR0FHekIsK0JBQ2QsZ0NBQUMsK0JBQUQ7QUFDRSxjQUFBLElBQUksRUFBQyxjQURQO0FBRUUsY0FBQSxLQUFLLEVBQUMsb0JBRlI7QUFHRSxjQUFBLE1BQU0sRUFBQyxZQUhUO0FBSUUsY0FBQSxTQUFTLEVBQUMsTUFKWjtBQUtFLGNBQUEsYUFBYSxFQUFDLE1BTGhCO0FBTUUsY0FBQSxRQUFRLEVBQUVWLFdBTlo7QUFPRSxjQUFBLE9BQU8sRUFBRSxDQUNQO0FBQUNHLGdCQUFBQSxLQUFLLEVBQUUsT0FBUjtBQUFpQkMsZ0JBQUFBLEtBQUssRUFBRTtBQUF4QixlQURPLEVBRVA7QUFBQ0QsZ0JBQUFBLEtBQUssRUFBRSxRQUFSO0FBQWtCQyxnQkFBQUEsS0FBSyxFQUFFO0FBQXpCLGVBRk8sRUFHUDtBQUFDRCxnQkFBQUEsS0FBSyxFQUFFLE9BQVI7QUFBaUJDLGdCQUFBQSxLQUFLLEVBQUU7QUFBeEIsZUFITztBQVBYLGNBRGMsQ0FIeUI7QUFBQTtBQUFBLG1CQWtCcEIsa0JBQUlNLE9BQUosQ0FsQm9COztBQUFBO0FBa0JuQ0MsWUFBQUEsTUFsQm1DO0FBbUJ6Q0gsWUFBQUEsTUFBTSxDQUFDRyxNQUFELENBQU4sQ0FBZUMsa0JBQWY7O0FBbkJ5QztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUF6QyxHQUFGO0FBcUJELENBbERPLENBQVIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtheGV9IGZyb20gJ2plc3QtYXhlJztcbmltcG9ydCB7dmlzdWFsU25hcHNob3RzfSBmcm9tICdzb3NpYSc7XG5pbXBvcnQge2ZpcmVFdmVudH0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdCc7XG5pbXBvcnQgbWFya2Rvd24gZnJvbSAnLi4vRXpTZWdtZW50ZWRDb250cm9sLm1kJztcbmltcG9ydCBFelNlZ21lbnRlZENvbnRyb2wgZnJvbSAnLi4vRXpTZWdtZW50ZWRDb250cm9sJztcbmltcG9ydCB7ZnVsbFJlbmRlciwgcmVuZGVyVG9IdG1sfSBmcm9tICcuLi8uLi8uLi9qZXN0LWdsb2JhbHMnO1xuXG5jb25zdCBzY29wZSA9IHtFelNlZ21lbnRlZENvbnRyb2x9O1xuXG5kZXNjcmliZSgnRXpTZWdtZW50ZWRDb250cm9sJywgKCkgPT4ge1xuICB2aXN1YWxTbmFwc2hvdHMoe21hcmtkb3duLCBzY29wZX0pO1xuXG4gIGRlc2NyaWJlKCdvbkNoYW5nZScsICgpID0+IHtcbiAgICBpdCgndHJpZ2dlcnMgb25DaGFuZ2Ugd2hlbiBzZWdtZW50IGlzIGNsaWNrZWQnLCAoKSA9PiB7XG4gICAgICBjb25zdCBvbkNoYW5nZVNweTogKHZhbHVlOiBzdHJpbmcpID0+IHZvaWQgPSBqZXN0LmZuKCk7XG5cbiAgICAgIGNvbnN0IHtnZXRCeVRleHR9ID0gZnVsbFJlbmRlcihcbiAgICAgICAgPEV6U2VnbWVudGVkQ29udHJvbFxuICAgICAgICAgIG5hbWU9XCJ0ZXN0LXNlZ21lbnRcIlxuICAgICAgICAgIGxhYmVsPVwidGVzdCBzZWdtZW50XCJcbiAgICAgICAgICBhY3RpdmU9XCJmaXJzdFZhbHVlXCJcbiAgICAgICAgICBjbGFzc05hbWU9XCJ0ZXN0XCJcbiAgICAgICAgICBsYWJlbFBvc2l0aW9uPVwibGVmdFwiXG4gICAgICAgICAgb25DaGFuZ2U9e29uQ2hhbmdlU3B5fVxuICAgICAgICAgIG9wdGlvbnM9e1tcbiAgICAgICAgICAgIHtsYWJlbDogJ2ZpcnN0JywgdmFsdWU6ICdmaXJzdFZhbHVlJ30sXG4gICAgICAgICAgICB7bGFiZWw6ICdzZWNvbmQnLCB2YWx1ZTogJ3NlY29uZFZhbHVlJ30sXG4gICAgICAgICAgICB7bGFiZWw6ICd0aGlyZCcsIHZhbHVlOiAndGhpcmRWYWx1ZSd9LFxuICAgICAgICAgIF19XG4gICAgICAgIC8+XG4gICAgICApO1xuXG4gICAgICBmaXJlRXZlbnQuY2xpY2soZ2V0QnlUZXh0KCd0aGlyZCcpKTtcblxuICAgICAgZXhwZWN0KG9uQ2hhbmdlU3B5KS50b0hhdmVCZWVuQ2FsbGVkV2l0aCgndGhpcmRWYWx1ZScpO1xuICAgIH0pO1xuICB9KTtcblxuICBpdCgnc2hvdWxkIG1lZXQgYWNjZXNzaWJpbGl0eSBndWlkZWxpbmVzJywgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IG9uQ2hhbmdlU3B5OiAodmFsdWU6IHN0cmluZykgPT4gdm9pZCA9IGplc3QuZm4oKTtcblxuICAgIGNvbnN0IHdyYXBwZXIgPSByZW5kZXJUb0h0bWwoXG4gICAgICA8RXpTZWdtZW50ZWRDb250cm9sXG4gICAgICAgIG5hbWU9XCJ0ZXN0LXNlZ21lbnRcIlxuICAgICAgICBsYWJlbD1cImFjY2Vzc2liaWxpdHkgdGVzdFwiXG4gICAgICAgIGFjdGl2ZT1cImZpcnN0VmFsdWVcIlxuICAgICAgICBjbGFzc05hbWU9XCJ0ZXN0XCJcbiAgICAgICAgbGFiZWxQb3NpdGlvbj1cImxlZnRcIlxuICAgICAgICBvbkNoYW5nZT17b25DaGFuZ2VTcHl9XG4gICAgICAgIG9wdGlvbnM9e1tcbiAgICAgICAgICB7bGFiZWw6ICdmaXJzdCcsIHZhbHVlOiAnZmlyc3RWYWx1ZSd9LFxuICAgICAgICAgIHtsYWJlbDogJ3NlY29uZCcsIHZhbHVlOiAnc2Vjb25kVmFsdWUnfSxcbiAgICAgICAgICB7bGFiZWw6ICd0aGlyZCcsIHZhbHVlOiAndGhpcmRWYWx1ZSd9LFxuICAgICAgICBdfVxuICAgICAgLz5cbiAgICApO1xuICAgIGNvbnN0IGFjdHVhbCA9IGF3YWl0IGF4ZSh3cmFwcGVyKTtcbiAgICBleHBlY3QoYWN0dWFsKS50b0hhdmVOb1Zpb2xhdGlvbnMoKTtcbiAgfSk7XG59KTtcbiJdfQ==