"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _react = _interopRequireDefault(require("react"));

var _jestAxe = require("jest-axe");

var _sosia = require("sosia");

var _EzCheckbox = _interopRequireDefault(require("../EzCheckbox.md"));

var _ = _interopRequireDefault(require(".."));

var _jestGlobals = require("../../../jest-globals");

var scope = {
  EzCheckbox: _["default"]
};
describe('EzCheckbox', function () {
  (0, _sosia.visualSnapshots)({
    markdown: _EzCheckbox["default"],
    scope: scope
  });
  it('should meet accessibility guidelines',
  /*#__PURE__*/
  (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee() {
    var wrapper, actual;
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            wrapper = (0, _jestGlobals.renderToHtml)(_react["default"].createElement(_["default"], {
              label: "Basic checkbox",
              onChange: function onChange() {},
              checked: true
            }));
            _context.next = 3;
            return (0, _jestAxe.axe)(wrapper);

          case 3:
            actual = _context.sent;
            expect(actual).toHaveNoViolations();

          case 5:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  })));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0V6Q2hlY2tib3gvX190ZXN0c19fL0V6Q2hlY2tib3gudGVzdC50c3giXSwibmFtZXMiOlsic2NvcGUiLCJFekNoZWNrYm94IiwiZGVzY3JpYmUiLCJtYXJrZG93biIsIml0Iiwid3JhcHBlciIsImFjdHVhbCIsImV4cGVjdCIsInRvSGF2ZU5vVmlvbGF0aW9ucyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQSxJQUFNQSxLQUFLLEdBQUc7QUFBQ0MsRUFBQUEsVUFBVSxFQUFWQTtBQUFELENBQWQ7QUFFQUMsUUFBUSxDQUFDLFlBQUQsRUFBZSxZQUFNO0FBQzNCLDhCQUFnQjtBQUFDQyxJQUFBQSxRQUFRLEVBQVJBLHNCQUFEO0FBQVdILElBQUFBLEtBQUssRUFBTEE7QUFBWCxHQUFoQjtBQUVBSSxFQUFBQSxFQUFFLENBQUMsc0NBQUQ7QUFBQTtBQUFBO0FBQUE7QUFBQSwrQkFBeUM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ25DQyxZQUFBQSxPQURtQyxHQUN6QiwrQkFBYSxnQ0FBQyxZQUFEO0FBQVksY0FBQSxLQUFLLEVBQUMsZ0JBQWxCO0FBQW1DLGNBQUEsUUFBUSxFQUFFLG9CQUFNLENBQUUsQ0FBckQ7QUFBdUQsY0FBQSxPQUFPO0FBQTlELGNBQWIsQ0FEeUI7QUFBQTtBQUFBLG1CQUVwQixrQkFBSUEsT0FBSixDQUZvQjs7QUFBQTtBQUVuQ0MsWUFBQUEsTUFGbUM7QUFHekNDLFlBQUFBLE1BQU0sQ0FBQ0QsTUFBRCxDQUFOLENBQWVFLGtCQUFmOztBQUh5QztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUF6QyxHQUFGO0FBS0QsQ0FSTyxDQUFSIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7YXhlfSBmcm9tICdqZXN0LWF4ZSc7XG5pbXBvcnQge3Zpc3VhbFNuYXBzaG90c30gZnJvbSAnc29zaWEnO1xuaW1wb3J0IG1hcmtkb3duIGZyb20gJy4uL0V6Q2hlY2tib3gubWQnO1xuaW1wb3J0IEV6Q2hlY2tib3ggZnJvbSAnLi4nO1xuaW1wb3J0IHtyZW5kZXJUb0h0bWx9IGZyb20gJy4uLy4uLy4uL2plc3QtZ2xvYmFscyc7XG5cbmNvbnN0IHNjb3BlID0ge0V6Q2hlY2tib3h9O1xuXG5kZXNjcmliZSgnRXpDaGVja2JveCcsICgpID0+IHtcbiAgdmlzdWFsU25hcHNob3RzKHttYXJrZG93biwgc2NvcGV9KTtcblxuICBpdCgnc2hvdWxkIG1lZXQgYWNjZXNzaWJpbGl0eSBndWlkZWxpbmVzJywgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IHdyYXBwZXIgPSByZW5kZXJUb0h0bWwoPEV6Q2hlY2tib3ggbGFiZWw9XCJCYXNpYyBjaGVja2JveFwiIG9uQ2hhbmdlPXsoKSA9PiB7fX0gY2hlY2tlZCAvPik7XG4gICAgY29uc3QgYWN0dWFsID0gYXdhaXQgYXhlKHdyYXBwZXIpO1xuICAgIGV4cGVjdChhY3R1YWwpLnRvSGF2ZU5vVmlvbGF0aW9ucygpO1xuICB9KTtcbn0pO1xuIl19