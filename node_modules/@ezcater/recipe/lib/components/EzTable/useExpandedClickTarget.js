"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _react = require("react");

var interactiveElements = 'label, input, button, select, a, [aria-role]';

var isInteractive = function isInteractive(e, context) {
  var el = e.target;

  do {
    if (el.matches(interactiveElements)) return el;
    el = el.parentNode;
  } while (el !== null && el.nodeType === 1 && el !== context);

  return null;
};

var useExpandedClickTarget = function useExpandedClickTarget() {
  var targetRef = (0, _react.useRef)();
  var clickableRef = (0, _react.useRef)();

  var _useState = (0, _react.useState)(false),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      clickable = _useState2[0],
      setClickable = _useState2[1];

  return [targetRef, {
    onClick: function onClick(e) {
      if (targetRef.current && clickableRef.current && !isInteractive(e, clickableRef.current)) targetRef.current.click();
    },
    onMouseEnter: function onMouseEnter() {
      setClickable(Boolean(targetRef.current));
    },
    clickable: clickable,
    ref: clickableRef
  }];
};

var _default = useExpandedClickTarget;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0V6VGFibGUvdXNlRXhwYW5kZWRDbGlja1RhcmdldC50c3giXSwibmFtZXMiOlsiaW50ZXJhY3RpdmVFbGVtZW50cyIsImlzSW50ZXJhY3RpdmUiLCJlIiwiY29udGV4dCIsImVsIiwidGFyZ2V0IiwibWF0Y2hlcyIsInBhcmVudE5vZGUiLCJub2RlVHlwZSIsInVzZUV4cGFuZGVkQ2xpY2tUYXJnZXQiLCJ0YXJnZXRSZWYiLCJjbGlja2FibGVSZWYiLCJjbGlja2FibGUiLCJzZXRDbGlja2FibGUiLCJvbkNsaWNrIiwiY3VycmVudCIsImNsaWNrIiwib25Nb3VzZUVudGVyIiwiQm9vbGVhbiIsInJlZiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7QUFTQSxJQUFNQSxtQkFBbUIsR0FBRyw4Q0FBNUI7O0FBRUEsSUFBTUMsYUFBYSxHQUFHLFNBQWhCQSxhQUFnQixDQUFDQyxDQUFELEVBQUlDLE9BQUosRUFBZ0I7QUFDcEMsTUFBSUMsRUFBRSxHQUFHRixDQUFDLENBQUNHLE1BQVg7O0FBRUEsS0FBRztBQUNELFFBQUlELEVBQUUsQ0FBQ0UsT0FBSCxDQUFXTixtQkFBWCxDQUFKLEVBQXFDLE9BQU9JLEVBQVA7QUFDckNBLElBQUFBLEVBQUUsR0FBR0EsRUFBRSxDQUFDRyxVQUFSO0FBQ0QsR0FIRCxRQUdTSCxFQUFFLEtBQUssSUFBUCxJQUFlQSxFQUFFLENBQUNJLFFBQUgsS0FBZ0IsQ0FBL0IsSUFBb0NKLEVBQUUsS0FBS0QsT0FIcEQ7O0FBS0EsU0FBTyxJQUFQO0FBQ0QsQ0FURDs7QUFXQSxJQUFNTSxzQkFBc0IsR0FBRyxTQUF6QkEsc0JBQXlCLEdBQW1EO0FBQ2hGLE1BQU1DLFNBQVMsR0FBRyxvQkFBbEI7QUFDQSxNQUFNQyxZQUFZLEdBQUcsb0JBQXJCOztBQUZnRixrQkFHOUMscUJBQVMsS0FBVCxDQUg4QztBQUFBO0FBQUEsTUFHekVDLFNBSHlFO0FBQUEsTUFHOURDLFlBSDhEOztBQUtoRixTQUFPLENBQ0xILFNBREssRUFFTDtBQUNFSSxJQUFBQSxPQUFPLEVBQUUsaUJBQUFaLENBQUMsRUFBSTtBQUNaLFVBQUlRLFNBQVMsQ0FBQ0ssT0FBVixJQUFxQkosWUFBWSxDQUFDSSxPQUFsQyxJQUE2QyxDQUFDZCxhQUFhLENBQUNDLENBQUQsRUFBSVMsWUFBWSxDQUFDSSxPQUFqQixDQUEvRCxFQUNFTCxTQUFTLENBQUNLLE9BQVYsQ0FBa0JDLEtBQWxCO0FBQ0gsS0FKSDtBQUtFQyxJQUFBQSxZQUFZLEVBQUUsd0JBQU07QUFDbEJKLE1BQUFBLFlBQVksQ0FBQ0ssT0FBTyxDQUFDUixTQUFTLENBQUNLLE9BQVgsQ0FBUixDQUFaO0FBQ0QsS0FQSDtBQVFFSCxJQUFBQSxTQUFTLEVBQVRBLFNBUkY7QUFTRU8sSUFBQUEsR0FBRyxFQUFFUjtBQVRQLEdBRkssQ0FBUDtBQWNELENBbkJEOztlQXFCZUYsc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHt1c2VSZWYsIHVzZVN0YXRlfSBmcm9tICdyZWFjdCc7XG5cbnR5cGUgQ2xpY2tFdmVudHMgPSB7XG4gIG9uTW91c2VFbnRlcjogUmVhY3QuTW91c2VFdmVudEhhbmRsZXI7XG4gIG9uQ2xpY2s6IFJlYWN0Lk1vdXNlRXZlbnRIYW5kbGVyO1xuICBjbGlja2FibGU6IGJvb2xlYW47XG4gIHJlZjogUmVhY3QuUmVmT2JqZWN0PEhUTUxFbGVtZW50Pjtcbn07XG5cbmNvbnN0IGludGVyYWN0aXZlRWxlbWVudHMgPSAnbGFiZWwsIGlucHV0LCBidXR0b24sIHNlbGVjdCwgYSwgW2FyaWEtcm9sZV0nO1xuXG5jb25zdCBpc0ludGVyYWN0aXZlID0gKGUsIGNvbnRleHQpID0+IHtcbiAgbGV0IGVsID0gZS50YXJnZXQ7XG5cbiAgZG8ge1xuICAgIGlmIChlbC5tYXRjaGVzKGludGVyYWN0aXZlRWxlbWVudHMpKSByZXR1cm4gZWw7XG4gICAgZWwgPSBlbC5wYXJlbnROb2RlO1xuICB9IHdoaWxlIChlbCAhPT0gbnVsbCAmJiBlbC5ub2RlVHlwZSA9PT0gMSAmJiBlbCAhPT0gY29udGV4dCk7XG5cbiAgcmV0dXJuIG51bGw7XG59O1xuXG5jb25zdCB1c2VFeHBhbmRlZENsaWNrVGFyZ2V0ID0gKCk6IFtSZWFjdC5SZWZPYmplY3Q8SFRNTEVsZW1lbnQ+LCBDbGlja0V2ZW50c10gPT4ge1xuICBjb25zdCB0YXJnZXRSZWYgPSB1c2VSZWY8SFRNTEVsZW1lbnQ+KCk7XG4gIGNvbnN0IGNsaWNrYWJsZVJlZiA9IHVzZVJlZjxIVE1MRWxlbWVudD4oKTtcbiAgY29uc3QgW2NsaWNrYWJsZSwgc2V0Q2xpY2thYmxlXSA9IHVzZVN0YXRlKGZhbHNlKTtcblxuICByZXR1cm4gW1xuICAgIHRhcmdldFJlZixcbiAgICB7XG4gICAgICBvbkNsaWNrOiBlID0+IHtcbiAgICAgICAgaWYgKHRhcmdldFJlZi5jdXJyZW50ICYmIGNsaWNrYWJsZVJlZi5jdXJyZW50ICYmICFpc0ludGVyYWN0aXZlKGUsIGNsaWNrYWJsZVJlZi5jdXJyZW50KSlcbiAgICAgICAgICB0YXJnZXRSZWYuY3VycmVudC5jbGljaygpO1xuICAgICAgfSxcbiAgICAgIG9uTW91c2VFbnRlcjogKCkgPT4ge1xuICAgICAgICBzZXRDbGlja2FibGUoQm9vbGVhbih0YXJnZXRSZWYuY3VycmVudCkpO1xuICAgICAgfSxcbiAgICAgIGNsaWNrYWJsZSxcbiAgICAgIHJlZjogY2xpY2thYmxlUmVmLFxuICAgIH0sXG4gIF07XG59O1xuXG5leHBvcnQgZGVmYXVsdCB1c2VFeHBhbmRlZENsaWNrVGFyZ2V0O1xuIl19