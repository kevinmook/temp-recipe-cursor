"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _react = _interopRequireDefault(require("react"));

var _jestAxe = require("jest-axe");

var _sosia = require("sosia");

var _EzHeading = _interopRequireDefault(require("../EzHeading.md"));

var _EzHeading2 = _interopRequireDefault(require("../EzHeading"));

var _index = require("../../index");

var _jestGlobals = require("../../../jest-globals");

var scope = {
  EzHeading: _EzHeading2["default"],
  EzCard: _index.EzCard,
  React: _react["default"]
};
describe('EzHeading', function () {
  (0, _sosia.visualSnapshots)({
    markdown: _EzHeading["default"],
    scope: scope
  });
  it('should render with the specified tag', function () {
    var _fullRender = (0, _jestGlobals.fullRender)(_react["default"].createElement(_EzHeading2["default"], {
      as: "h1",
      size: "6"
    }, "Heading")),
        container = _fullRender.container;

    expect(container.querySelectorAll('h1')).toHaveLength(1);
  });
  test.each(['1', '2', '3', '4', '5', '6'])('Shows/Hides subheading for size %i', function (n) {
    var size = n;

    var _fullRender2 = (0, _jestGlobals.fullRender)(_react["default"].createElement(_EzHeading2["default"], {
      size: size,
      subheading: "Subheading"
    }, "Heading")),
        container = _fullRender2.container;

    var shown = n === '3' || n === '5' ? 1 : 0;
    expect(container.querySelectorAll('div')).toHaveLength(shown);
  });
  it('should meet accessibility guidelines',
  /*#__PURE__*/
  (0, _asyncToGenerator2["default"])(
  /*#__PURE__*/
  _regenerator["default"].mark(function _callee() {
    var wrapper, actual;
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            wrapper = (0, _jestGlobals.renderToHtml)(_react["default"].createElement(_EzHeading2["default"], {
              size: "1"
            }, "Heading"));
            _context.next = 3;
            return (0, _jestAxe.axe)(wrapper);

          case 3:
            actual = _context.sent;
            expect(actual).toHaveNoViolations();

          case 5:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  })));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0V6SGVhZGluZy9fX3Rlc3RzX18vRXpIZWFkaW5nLnRlc3QudHN4Il0sIm5hbWVzIjpbInNjb3BlIiwiRXpIZWFkaW5nIiwiRXpDYXJkIiwiUmVhY3QiLCJkZXNjcmliZSIsIm1hcmtkb3duIiwiaXQiLCJjb250YWluZXIiLCJleHBlY3QiLCJxdWVyeVNlbGVjdG9yQWxsIiwidG9IYXZlTGVuZ3RoIiwidGVzdCIsImVhY2giLCJuIiwic2l6ZSIsInNob3duIiwid3JhcHBlciIsImFjdHVhbCIsInRvSGF2ZU5vVmlvbGF0aW9ucyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQSxJQUFNQSxLQUFLLEdBQUc7QUFBQ0MsRUFBQUEsU0FBUyxFQUFUQSxzQkFBRDtBQUFZQyxFQUFBQSxNQUFNLEVBQU5BLGFBQVo7QUFBb0JDLEVBQUFBLEtBQUssRUFBTEE7QUFBcEIsQ0FBZDtBQUVBQyxRQUFRLENBQUMsV0FBRCxFQUFjLFlBQU07QUFDMUIsOEJBQWdCO0FBQUNDLElBQUFBLFFBQVEsRUFBUkEscUJBQUQ7QUFBV0wsSUFBQUEsS0FBSyxFQUFMQTtBQUFYLEdBQWhCO0FBRUFNLEVBQUFBLEVBQUUsQ0FBQyxzQ0FBRCxFQUF5QyxZQUFNO0FBQUEsc0JBQzNCLDZCQUNsQixnQ0FBQyxzQkFBRDtBQUFXLE1BQUEsRUFBRSxFQUFDLElBQWQ7QUFBbUIsTUFBQSxJQUFJLEVBQUM7QUFBeEIsaUJBRGtCLENBRDJCO0FBQUEsUUFDeENDLFNBRHdDLGVBQ3hDQSxTQUR3Qzs7QUFNL0NDLElBQUFBLE1BQU0sQ0FBQ0QsU0FBUyxDQUFDRSxnQkFBVixDQUEyQixJQUEzQixDQUFELENBQU4sQ0FBeUNDLFlBQXpDLENBQXNELENBQXREO0FBQ0QsR0FQQyxDQUFGO0FBU0FDLEVBQUFBLElBQUksQ0FBQ0MsSUFBTCxDQUFVLENBQUMsR0FBRCxFQUFNLEdBQU4sRUFBVyxHQUFYLEVBQWdCLEdBQWhCLEVBQXFCLEdBQXJCLEVBQTBCLEdBQTFCLENBQVYsRUFBMEMsb0NBQTFDLEVBQWdGLFVBQUFDLENBQUMsRUFBSTtBQUNuRixRQUFNQyxJQUFJLEdBQUdELENBQWI7O0FBRG1GLHVCQUcvRCw2QkFDbEIsZ0NBQUMsc0JBQUQ7QUFBVyxNQUFBLElBQUksRUFBRUMsSUFBakI7QUFBdUIsTUFBQSxVQUFVLEVBQUM7QUFBbEMsaUJBRGtCLENBSCtEO0FBQUEsUUFHNUVQLFNBSDRFLGdCQUc1RUEsU0FINEU7O0FBUW5GLFFBQU1RLEtBQUssR0FBR0YsQ0FBQyxLQUFLLEdBQU4sSUFBYUEsQ0FBQyxLQUFLLEdBQW5CLEdBQXlCLENBQXpCLEdBQTZCLENBQTNDO0FBQ0FMLElBQUFBLE1BQU0sQ0FBQ0QsU0FBUyxDQUFDRSxnQkFBVixDQUEyQixLQUEzQixDQUFELENBQU4sQ0FBMENDLFlBQTFDLENBQXVESyxLQUF2RDtBQUNELEdBVkQ7QUFZQVQsRUFBQUEsRUFBRSxDQUFDLHNDQUFEO0FBQUE7QUFBQTtBQUFBO0FBQUEsK0JBQXlDO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNuQ1UsWUFBQUEsT0FEbUMsR0FDekIsK0JBQWEsZ0NBQUMsc0JBQUQ7QUFBVyxjQUFBLElBQUksRUFBQztBQUFoQix5QkFBYixDQUR5QjtBQUFBO0FBQUEsbUJBRXBCLGtCQUFJQSxPQUFKLENBRm9COztBQUFBO0FBRW5DQyxZQUFBQSxNQUZtQztBQUd6Q1QsWUFBQUEsTUFBTSxDQUFDUyxNQUFELENBQU4sQ0FBZUMsa0JBQWY7O0FBSHlDO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQXpDLEdBQUY7QUFLRCxDQTdCTyxDQUFSIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7YXhlfSBmcm9tICdqZXN0LWF4ZSc7XG5pbXBvcnQge3Zpc3VhbFNuYXBzaG90c30gZnJvbSAnc29zaWEnO1xuaW1wb3J0IG1hcmtkb3duIGZyb20gJy4uL0V6SGVhZGluZy5tZCc7XG5pbXBvcnQgRXpIZWFkaW5nIGZyb20gJy4uL0V6SGVhZGluZyc7XG5pbXBvcnQge0V6Q2FyZH0gZnJvbSAnLi4vLi4vaW5kZXgnO1xuaW1wb3J0IHtmdWxsUmVuZGVyLCByZW5kZXJUb0h0bWx9IGZyb20gJy4uLy4uLy4uL2plc3QtZ2xvYmFscyc7XG5cbmNvbnN0IHNjb3BlID0ge0V6SGVhZGluZywgRXpDYXJkLCBSZWFjdH07XG5cbmRlc2NyaWJlKCdFekhlYWRpbmcnLCAoKSA9PiB7XG4gIHZpc3VhbFNuYXBzaG90cyh7bWFya2Rvd24sIHNjb3BlfSk7XG5cbiAgaXQoJ3Nob3VsZCByZW5kZXIgd2l0aCB0aGUgc3BlY2lmaWVkIHRhZycsICgpID0+IHtcbiAgICBjb25zdCB7Y29udGFpbmVyfSA9IGZ1bGxSZW5kZXIoXG4gICAgICA8RXpIZWFkaW5nIGFzPVwiaDFcIiBzaXplPVwiNlwiPlxuICAgICAgICBIZWFkaW5nXG4gICAgICA8L0V6SGVhZGluZz5cbiAgICApO1xuICAgIGV4cGVjdChjb250YWluZXIucXVlcnlTZWxlY3RvckFsbCgnaDEnKSkudG9IYXZlTGVuZ3RoKDEpO1xuICB9KTtcblxuICB0ZXN0LmVhY2goWycxJywgJzInLCAnMycsICc0JywgJzUnLCAnNiddKSgnU2hvd3MvSGlkZXMgc3ViaGVhZGluZyBmb3Igc2l6ZSAlaScsIG4gPT4ge1xuICAgIGNvbnN0IHNpemUgPSBuIGFzICcxJyB8ICcyJyB8ICczJyB8ICc0JyB8ICc1JyB8ICc2JztcblxuICAgIGNvbnN0IHtjb250YWluZXJ9ID0gZnVsbFJlbmRlcihcbiAgICAgIDxFekhlYWRpbmcgc2l6ZT17c2l6ZX0gc3ViaGVhZGluZz1cIlN1YmhlYWRpbmdcIj5cbiAgICAgICAgSGVhZGluZ1xuICAgICAgPC9FekhlYWRpbmc+XG4gICAgKTtcbiAgICBjb25zdCBzaG93biA9IG4gPT09ICczJyB8fCBuID09PSAnNScgPyAxIDogMDtcbiAgICBleHBlY3QoY29udGFpbmVyLnF1ZXJ5U2VsZWN0b3JBbGwoJ2RpdicpKS50b0hhdmVMZW5ndGgoc2hvd24pO1xuICB9KTtcblxuICBpdCgnc2hvdWxkIG1lZXQgYWNjZXNzaWJpbGl0eSBndWlkZWxpbmVzJywgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IHdyYXBwZXIgPSByZW5kZXJUb0h0bWwoPEV6SGVhZGluZyBzaXplPVwiMVwiPkhlYWRpbmc8L0V6SGVhZGluZz4pO1xuICAgIGNvbnN0IGFjdHVhbCA9IGF3YWl0IGF4ZSh3cmFwcGVyKTtcbiAgICBleHBlY3QoYWN0dWFsKS50b0hhdmVOb1Zpb2xhdGlvbnMoKTtcbiAgfSk7XG59KTtcbiJdfQ==