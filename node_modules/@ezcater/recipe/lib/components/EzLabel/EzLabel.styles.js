"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _core = require("@emotion/core");

var _styledComponentVariant = _interopRequireDefault(require("styled-component-variant"));

var _styles = require("../../styles");

var _styled = _interopRequireDefault(require("../../themes/styled"));

var base = function base(_ref) {
  var theme = _ref.theme;
  return (
    /*#__PURE__*/
    (0, _core.css)("line-height:", theme.lineHeights.heading, ";font-weight:", theme.fontWeights.bold, ";padding:0;")
  );
};

var typography = function typography(_ref2) {
  var shade = _ref2.shade,
      size = _ref2.size;
  return function (_ref3) {
    var theme = _ref3.theme;
    return (
      /*#__PURE__*/
      (0, _core.css)("color:", theme.colors.text[shade], ";font-size:", theme.fontSizes[size], ";")
    );
  };
};

var size = (0, _styledComponentVariant["default"])('size', {
  small: typography({
    shade: 'deemphasis',
    size: 200
  }),
  normal: typography({
    shade: 'base',
    size: 300
  })
});

var top = function top(_ref4) {
  var theme = _ref4.theme;
  return {
    marginBottom: theme.spacing.xs2
  };
};

var bottom = function bottom(_ref5) {
  var theme = _ref5.theme;
  return {
    marginTop: theme.spacing.xs2
  };
};

var left = function left(_ref6) {
  var theme = _ref6.theme;
  return (
    /*#__PURE__*/
    (0, _core.css)("display:inline-block;margin-right:", theme.spacing.sm, ";")
  );
};

var right = function right(_ref7) {
  var theme = _ref7.theme;
  return (
    /*#__PURE__*/
    (0, _core.css)("display:inline-block;margin-left:", theme.spacing.sm, ";")
  );
};

var error = function error(_ref8) {
  var hasError = _ref8.error,
      theme = _ref8.theme;
  return hasError &&
  /*#__PURE__*/
  (0, _core.css)("color:", theme.colors.destructive.foreground, ";");
};

var position = (0, _styledComponentVariant["default"])('position', {
  top: top,
  bottom: bottom,
  left: left,
  right: right,
  hidden: _styles.hideVisually
});

var _default =
/*#__PURE__*/
(0, _styled["default"])("div", {
  target: "eqn6k5a0"
})(base, position, size, error);

exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0V6TGFiZWwvRXpMYWJlbC5zdHlsZXMudHMiXSwibmFtZXMiOlsiYmFzZSIsInRoZW1lIiwiY3NzIiwibGluZUhlaWdodHMiLCJoZWFkaW5nIiwiZm9udFdlaWdodHMiLCJib2xkIiwidHlwb2dyYXBoeSIsInNoYWRlIiwic2l6ZSIsImNvbG9ycyIsInRleHQiLCJmb250U2l6ZXMiLCJzbWFsbCIsIm5vcm1hbCIsInRvcCIsIm1hcmdpbkJvdHRvbSIsInNwYWNpbmciLCJ4czIiLCJib3R0b20iLCJtYXJnaW5Ub3AiLCJsZWZ0Iiwic20iLCJyaWdodCIsImVycm9yIiwiaGFzRXJyb3IiLCJkZXN0cnVjdGl2ZSIsImZvcmVncm91bmQiLCJwb3NpdGlvbiIsImhpZGRlbiIsImhpZGVWaXN1YWxseSIsInN0eWxlZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUEsSUFBTUEsSUFBSSxHQUFHLFNBQVBBLElBQU87QUFBQSxNQUFFQyxLQUFGLFFBQUVBLEtBQUY7QUFBQTtBQUFBO0FBQUEsUUFBcUJDLFNBQXJCLGtCQUNJRCxLQUFLLENBQUNFLFdBQU4sQ0FBa0JDLE9BRHRCLG1CQUVJSCxLQUFLLENBQUNJLFdBQU4sQ0FBa0JDLElBRnRCO0FBQUE7QUFBQSxDQUFiOztBQU1BLElBQU1DLFVBQVUsR0FBRyxTQUFiQSxVQUFhO0FBQUEsTUFBRUMsS0FBRixTQUFFQSxLQUFGO0FBQUEsTUFBU0MsSUFBVCxTQUFTQSxJQUFUO0FBQUEsU0FBbUI7QUFBQSxRQUFFUixLQUFGLFNBQUVBLEtBQUY7QUFBQTtBQUFBO0FBQUEsVUFBcUJDLFNBQXJCLFlBQzNCRCxLQUFLLENBQUNTLE1BQU4sQ0FBYUMsSUFBYixDQUFrQkgsS0FBbEIsQ0FEMkIsaUJBRXZCUCxLQUFLLENBQUNXLFNBQU4sQ0FBZ0JILElBQWhCLENBRnVCO0FBQUE7QUFBQSxHQUFuQjtBQUFBLENBQW5COztBQUtBLElBQU1BLElBQUksR0FBRyx3Q0FBUSxNQUFSLEVBQWdCO0FBQzNCSSxFQUFBQSxLQUFLLEVBQUVOLFVBQVUsQ0FBQztBQUFDQyxJQUFBQSxLQUFLLEVBQUUsWUFBUjtBQUFzQkMsSUFBQUEsSUFBSSxFQUFFO0FBQTVCLEdBQUQsQ0FEVTtBQUUzQkssRUFBQUEsTUFBTSxFQUFFUCxVQUFVLENBQUM7QUFBQ0MsSUFBQUEsS0FBSyxFQUFFLE1BQVI7QUFBZ0JDLElBQUFBLElBQUksRUFBRTtBQUF0QixHQUFEO0FBRlMsQ0FBaEIsQ0FBYjs7QUFLQSxJQUFNTSxHQUFHLEdBQUcsU0FBTkEsR0FBTTtBQUFBLE1BQUVkLEtBQUYsU0FBRUEsS0FBRjtBQUFBLFNBQXNCO0FBQUNlLElBQUFBLFlBQVksRUFBRWYsS0FBSyxDQUFDZ0IsT0FBTixDQUFjQztBQUE3QixHQUF0QjtBQUFBLENBQVo7O0FBQ0EsSUFBTUMsTUFBTSxHQUFHLFNBQVRBLE1BQVM7QUFBQSxNQUFFbEIsS0FBRixTQUFFQSxLQUFGO0FBQUEsU0FBc0I7QUFBQ21CLElBQUFBLFNBQVMsRUFBRW5CLEtBQUssQ0FBQ2dCLE9BQU4sQ0FBY0M7QUFBMUIsR0FBdEI7QUFBQSxDQUFmOztBQUVBLElBQU1HLElBQUksR0FBRyxTQUFQQSxJQUFPO0FBQUEsTUFBRXBCLEtBQUYsU0FBRUEsS0FBRjtBQUFBO0FBQUE7QUFBQSxRQUFxQkMsU0FBckIsd0NBRUtELEtBQUssQ0FBQ2dCLE9BQU4sQ0FBY0ssRUFGbkI7QUFBQTtBQUFBLENBQWI7O0FBS0EsSUFBTUMsS0FBSyxHQUFHLFNBQVJBLEtBQVE7QUFBQSxNQUFFdEIsS0FBRixTQUFFQSxLQUFGO0FBQUE7QUFBQTtBQUFBLFFBQXFCQyxTQUFyQix1Q0FFR0QsS0FBSyxDQUFDZ0IsT0FBTixDQUFjSyxFQUZqQjtBQUFBO0FBQUEsQ0FBZDs7QUFLQSxJQUFNRSxLQUFLLEdBQUcsU0FBUkEsS0FBUTtBQUFBLE1BQVNDLFFBQVQsU0FBRUQsS0FBRjtBQUFBLE1BQW1CdkIsS0FBbkIsU0FBbUJBLEtBQW5CO0FBQUEsU0FDWndCLFFBQVE7QUFBQTtBQUFBLE1BQ1J2QixTQURRLFlBRUdELEtBQUssQ0FBQ1MsTUFBTixDQUFhZ0IsV0FBYixDQUF5QkMsVUFGNUIsTUFESTtBQUFBLENBQWQ7O0FBTUEsSUFBTUMsUUFBUSxHQUFHLHdDQUFRLFVBQVIsRUFBb0I7QUFDbkNiLEVBQUFBLEdBQUcsRUFBSEEsR0FEbUM7QUFFbkNJLEVBQUFBLE1BQU0sRUFBTkEsTUFGbUM7QUFHbkNFLEVBQUFBLElBQUksRUFBSkEsSUFIbUM7QUFJbkNFLEVBQUFBLEtBQUssRUFBTEEsS0FKbUM7QUFLbkNNLEVBQUFBLE1BQU0sRUFBRUM7QUFMMkIsQ0FBcEIsQ0FBakI7Ozs7SUFRZUMsa0I7O0dBQWdCL0IsSSxFQUFNNEIsUSxFQUFVbkIsSSxFQUFNZSxLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtjc3N9IGZyb20gJ0BlbW90aW9uL2NvcmUnO1xuaW1wb3J0IHZhcmlhbnQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudC12YXJpYW50JztcbmltcG9ydCB7aGlkZVZpc3VhbGx5fSBmcm9tICcuLi8uLi9zdHlsZXMnO1xuaW1wb3J0IHN0eWxlZCwge1RoZW1lZH0gZnJvbSAnLi4vLi4vdGhlbWVzL3N0eWxlZCc7XG5cbmNvbnN0IGJhc2UgPSAoe3RoZW1lfTogVGhlbWVkKSA9PiBjc3NgXG4gIGxpbmUtaGVpZ2h0OiAke3RoZW1lLmxpbmVIZWlnaHRzLmhlYWRpbmd9O1xuICBmb250LXdlaWdodDogJHt0aGVtZS5mb250V2VpZ2h0cy5ib2xkfTtcbiAgcGFkZGluZzogMDsgLyogcmVtb3ZlIHVzZXIgYWdlbnQgc3R5bGVzIChpbiBwYXJ0aWN1bGFyIHdoZW4gZWxlbWVudCBpcyBmaWVsZHNldCBsZWdlbmQpICovXG5gO1xuXG5jb25zdCB0eXBvZ3JhcGh5ID0gKHtzaGFkZSwgc2l6ZX0pID0+ICh7dGhlbWV9OiBUaGVtZWQpID0+IGNzc2BcbiAgY29sb3I6ICR7dGhlbWUuY29sb3JzLnRleHRbc2hhZGVdfTtcbiAgZm9udC1zaXplOiAke3RoZW1lLmZvbnRTaXplc1tzaXplXX07XG5gO1xuXG5jb25zdCBzaXplID0gdmFyaWFudCgnc2l6ZScsIHtcbiAgc21hbGw6IHR5cG9ncmFwaHkoe3NoYWRlOiAnZGVlbXBoYXNpcycsIHNpemU6IDIwMH0pLFxuICBub3JtYWw6IHR5cG9ncmFwaHkoe3NoYWRlOiAnYmFzZScsIHNpemU6IDMwMH0pLFxufSk7XG5cbmNvbnN0IHRvcCA9ICh7dGhlbWV9OiBUaGVtZWQpID0+ICh7bWFyZ2luQm90dG9tOiB0aGVtZS5zcGFjaW5nLnhzMn0pO1xuY29uc3QgYm90dG9tID0gKHt0aGVtZX06IFRoZW1lZCkgPT4gKHttYXJnaW5Ub3A6IHRoZW1lLnNwYWNpbmcueHMyfSk7XG5cbmNvbnN0IGxlZnQgPSAoe3RoZW1lfTogVGhlbWVkKSA9PiBjc3NgXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luLXJpZ2h0OiAke3RoZW1lLnNwYWNpbmcuc219O1xuYDtcblxuY29uc3QgcmlnaHQgPSAoe3RoZW1lfTogVGhlbWVkKSA9PiBjc3NgXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luLWxlZnQ6ICR7dGhlbWUuc3BhY2luZy5zbX07XG5gO1xuXG5jb25zdCBlcnJvciA9ICh7ZXJyb3I6IGhhc0Vycm9yLCB0aGVtZX0pID0+XG4gIGhhc0Vycm9yICYmXG4gIGNzc2BcbiAgICBjb2xvcjogJHt0aGVtZS5jb2xvcnMuZGVzdHJ1Y3RpdmUuZm9yZWdyb3VuZH07XG4gIGA7XG5cbmNvbnN0IHBvc2l0aW9uID0gdmFyaWFudCgncG9zaXRpb24nLCB7XG4gIHRvcCxcbiAgYm90dG9tLFxuICBsZWZ0LFxuICByaWdodCxcbiAgaGlkZGVuOiBoaWRlVmlzdWFsbHksXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgc3R5bGVkLmRpdjxhbnk+KGJhc2UsIHBvc2l0aW9uLCBzaXplLCBlcnJvcik7XG4iXX0=