import React from 'react';
/**
 * Form fields provide inputs for form data, such as text, dates, emails and other data types.
 */
declare const EzField: React.ForwardRefExoticComponent<({
    type: "select";
    value?: string | number | boolean;
    options: {
        label: string;
        value: string | number | boolean;
    }[];
} & React.InputHTMLAttributes<HTMLInputElement> & {
    error?: string | boolean;
    helperText?: string;
    label: string;
    labelHidden?: boolean;
    maxLength?: number;
    prefix?: string;
    suffix?: string;
    touched?: boolean;
} & React.RefAttributes<HTMLElement>) | ({
    type: "radio";
    value?: string | number | boolean;
    options: {
        label: string;
        value: string | number | boolean;
    }[];
} & React.InputHTMLAttributes<HTMLInputElement> & {
    error?: string | boolean;
    helperText?: string;
    label: string;
    labelHidden?: boolean;
    maxLength?: number;
    prefix?: string;
    suffix?: string;
    touched?: boolean;
} & React.RefAttributes<HTMLElement>) | ({
    type: "checkbox";
    value?: (string | number | boolean)[];
    options: {
        label: string;
        value: string | number | boolean;
    }[];
} & React.InputHTMLAttributes<HTMLInputElement> & {
    error?: string | boolean;
    helperText?: string;
    label: string;
    labelHidden?: boolean;
    maxLength?: number;
    prefix?: string;
    suffix?: string;
    touched?: boolean;
} & React.RefAttributes<HTMLElement>) | ({
    type?: "number" | "textarea" | "text";
    value?: string | number;
} & React.InputHTMLAttributes<HTMLInputElement> & {
    error?: string | boolean;
    helperText?: string;
    label: string;
    labelHidden?: boolean;
    maxLength?: number;
    prefix?: string;
    suffix?: string;
    touched?: boolean;
} & React.RefAttributes<HTMLElement>) | ({
    type: "date";
    value: string | number | object;
    minDate?: string | number | object;
    maxDate?: string | number | object;
    filterDate?: (value: string) => boolean;
} & React.InputHTMLAttributes<HTMLInputElement> & {
    error?: string | boolean;
    helperText?: string;
    label: string;
    labelHidden?: boolean;
    maxLength?: number;
    prefix?: string;
    suffix?: string;
    touched?: boolean;
} & React.RefAttributes<HTMLElement>) | ({
    type: "time";
    value?: string;
    start: string;
    end: string;
    step?: number;
} & React.InputHTMLAttributes<HTMLInputElement> & {
    error?: string | boolean;
    helperText?: string;
    label: string;
    labelHidden?: boolean;
    maxLength?: number;
    prefix?: string;
    suffix?: string;
    touched?: boolean;
} & React.RefAttributes<HTMLElement>) | ({
    type: "textarea";
    size?: "small" | "medium" | "large";
} & React.InputHTMLAttributes<HTMLInputElement> & {
    error?: string | boolean;
    helperText?: string;
    label: string;
    labelHidden?: boolean;
    maxLength?: number;
    prefix?: string;
    suffix?: string;
    touched?: boolean;
} & React.RefAttributes<HTMLElement>) | ({
    type: React.ComponentClass<any, any> | React.FC<any>;
    value?: any;
} & React.InputHTMLAttributes<HTMLInputElement> & {
    error?: string | boolean;
    helperText?: string;
    label: string;
    labelHidden?: boolean;
    maxLength?: number;
    prefix?: string;
    suffix?: string;
    touched?: boolean;
} & React.RefAttributes<HTMLElement>)>;
/**
 * @component
 */
export default EzField;
