"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _react = _interopRequireDefault(require("react"));

var _react2 = require("@testing-library/react");

var _EzField = _interopRequireDefault(require("../EzField"));

var _jestGlobals = require("../../../jest-globals");

describe('EzField', function () {
  describe('radio button list', function () {
    var radiobuttonProps = {
      label: 'Single choice list',
      type: 'radio',
      options: [{
        label: 'Choice A',
        value: 'a'
      }, {
        label: 'Choice B',
        value: 'b'
      }, {
        label: 'Choice C',
        value: 'c'
      }]
    };
    it('should render radio button with correct selection', function () {
      var _render = (0, _jestGlobals.fullRender)(_react["default"].createElement(_EzField["default"], (0, _extends2["default"])({}, radiobuttonProps, {
        value: "c"
      }))),
          container = _render.container;

      expect((0, _react2.getByLabelText)(container, 'Choice A')).toHaveProperty('checked', false);
      expect((0, _react2.getByLabelText)(container, 'Choice B')).toHaveProperty('checked', false);
      expect((0, _react2.getByLabelText)(container, 'Choice C')).toHaveProperty('checked', true);
      var input = (0, _react2.getByLabelText)(container, 'Choice B');

      _react2.fireEvent.change(input, {
        target: {
          checked: true
        }
      });

      expect((0, _react2.getByLabelText)(container, 'Choice A')).toHaveProperty('checked', false);
      expect((0, _react2.getByLabelText)(container, 'Choice B')).toHaveProperty('checked', true);
      expect((0, _react2.getByLabelText)(container, 'Choice C')).toHaveProperty('checked', false);
    });
    it('should publish change event with the selected option', function () {
      var value;

      var onChange = function onChange(e) {
        value = e.target.value;
      };

      var _render2 = (0, _jestGlobals.fullRender)(_react["default"].createElement(_EzField["default"], (0, _extends2["default"])({}, radiobuttonProps, {
        onChange: onChange,
        value: "c"
      }))),
          container = _render2.container;

      var input = (0, _react2.getByLabelText)(container, 'Choice B');

      _react2.fireEvent.click(input);

      expect(value).toEqual('b');
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0V6RmllbGQvX190ZXN0c19fL0V6RmllbGQucmFkaW8udGVzdC50c3giXSwibmFtZXMiOlsiZGVzY3JpYmUiLCJyYWRpb2J1dHRvblByb3BzIiwibGFiZWwiLCJ0eXBlIiwib3B0aW9ucyIsInZhbHVlIiwiaXQiLCJjb250YWluZXIiLCJleHBlY3QiLCJ0b0hhdmVQcm9wZXJ0eSIsImlucHV0IiwiZmlyZUV2ZW50IiwiY2hhbmdlIiwidGFyZ2V0IiwiY2hlY2tlZCIsIm9uQ2hhbmdlIiwiZSIsImNsaWNrIiwidG9FcXVhbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUFBLFFBQVEsQ0FBQyxTQUFELEVBQVksWUFBTTtBQUN4QkEsRUFBQUEsUUFBUSxDQUFDLG1CQUFELEVBQXNCLFlBQU07QUFDbEMsUUFBTUMsZ0JBQWdCLEdBQUc7QUFDdkJDLE1BQUFBLEtBQUssRUFBRSxvQkFEZ0I7QUFFdkJDLE1BQUFBLElBQUksRUFBRSxPQUZpQjtBQUd2QkMsTUFBQUEsT0FBTyxFQUFFLENBQ1A7QUFBQ0YsUUFBQUEsS0FBSyxFQUFFLFVBQVI7QUFBb0JHLFFBQUFBLEtBQUssRUFBRTtBQUEzQixPQURPLEVBRVA7QUFBQ0gsUUFBQUEsS0FBSyxFQUFFLFVBQVI7QUFBb0JHLFFBQUFBLEtBQUssRUFBRTtBQUEzQixPQUZPLEVBR1A7QUFBQ0gsUUFBQUEsS0FBSyxFQUFFLFVBQVI7QUFBb0JHLFFBQUFBLEtBQUssRUFBRTtBQUEzQixPQUhPO0FBSGMsS0FBekI7QUFVQUMsSUFBQUEsRUFBRSxDQUFDLG1EQUFELEVBQXNELFlBQU07QUFBQSxvQkFDeEMsNkJBQU8sZ0NBQUMsbUJBQUQsZ0NBQWFMLGdCQUFiO0FBQStCLFFBQUEsS0FBSyxFQUFDO0FBQXJDLFNBQVAsQ0FEd0M7QUFBQSxVQUNyRE0sU0FEcUQsV0FDckRBLFNBRHFEOztBQUc1REMsTUFBQUEsTUFBTSxDQUFDLDRCQUFlRCxTQUFmLEVBQTBCLFVBQTFCLENBQUQsQ0FBTixDQUE4Q0UsY0FBOUMsQ0FBNkQsU0FBN0QsRUFBd0UsS0FBeEU7QUFDQUQsTUFBQUEsTUFBTSxDQUFDLDRCQUFlRCxTQUFmLEVBQTBCLFVBQTFCLENBQUQsQ0FBTixDQUE4Q0UsY0FBOUMsQ0FBNkQsU0FBN0QsRUFBd0UsS0FBeEU7QUFDQUQsTUFBQUEsTUFBTSxDQUFDLDRCQUFlRCxTQUFmLEVBQTBCLFVBQTFCLENBQUQsQ0FBTixDQUE4Q0UsY0FBOUMsQ0FBNkQsU0FBN0QsRUFBd0UsSUFBeEU7QUFFQSxVQUFNQyxLQUFLLEdBQUcsNEJBQWVILFNBQWYsRUFBMEIsVUFBMUIsQ0FBZDs7QUFFQUksd0JBQVVDLE1BQVYsQ0FBaUJGLEtBQWpCLEVBQXdCO0FBQUNHLFFBQUFBLE1BQU0sRUFBRTtBQUFDQyxVQUFBQSxPQUFPLEVBQUU7QUFBVjtBQUFULE9BQXhCOztBQUVBTixNQUFBQSxNQUFNLENBQUMsNEJBQWVELFNBQWYsRUFBMEIsVUFBMUIsQ0FBRCxDQUFOLENBQThDRSxjQUE5QyxDQUE2RCxTQUE3RCxFQUF3RSxLQUF4RTtBQUNBRCxNQUFBQSxNQUFNLENBQUMsNEJBQWVELFNBQWYsRUFBMEIsVUFBMUIsQ0FBRCxDQUFOLENBQThDRSxjQUE5QyxDQUE2RCxTQUE3RCxFQUF3RSxJQUF4RTtBQUNBRCxNQUFBQSxNQUFNLENBQUMsNEJBQWVELFNBQWYsRUFBMEIsVUFBMUIsQ0FBRCxDQUFOLENBQThDRSxjQUE5QyxDQUE2RCxTQUE3RCxFQUF3RSxLQUF4RTtBQUNELEtBZEMsQ0FBRjtBQWdCQUgsSUFBQUEsRUFBRSxDQUFDLHNEQUFELEVBQXlELFlBQU07QUFDL0QsVUFBSUQsS0FBSjs7QUFDQSxVQUFNVSxRQUFRLEdBQUcsU0FBWEEsUUFBVyxDQUFBQyxDQUFDLEVBQUk7QUFDcEJYLFFBQUFBLEtBQUssR0FBR1csQ0FBQyxDQUFDSCxNQUFGLENBQVNSLEtBQWpCO0FBQ0QsT0FGRDs7QUFGK0QscUJBSzNDLDZCQUFPLGdDQUFDLG1CQUFELGdDQUFhSixnQkFBYjtBQUErQixRQUFBLFFBQVEsRUFBRWMsUUFBekM7QUFBbUQsUUFBQSxLQUFLLEVBQUM7QUFBekQsU0FBUCxDQUwyQztBQUFBLFVBS3hEUixTQUx3RCxZQUt4REEsU0FMd0Q7O0FBTy9ELFVBQU1HLEtBQUssR0FBRyw0QkFBZUgsU0FBZixFQUEwQixVQUExQixDQUFkOztBQUVBSSx3QkFBVU0sS0FBVixDQUFnQlAsS0FBaEI7O0FBRUFGLE1BQUFBLE1BQU0sQ0FBQ0gsS0FBRCxDQUFOLENBQWNhLE9BQWQsQ0FBc0IsR0FBdEI7QUFDRCxLQVpDLENBQUY7QUFhRCxHQXhDTyxDQUFSO0FBeUNELENBMUNPLENBQVIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtnZXRCeUxhYmVsVGV4dCwgZmlyZUV2ZW50fSBmcm9tICdAdGVzdGluZy1saWJyYXJ5L3JlYWN0JztcbmltcG9ydCBFekZpZWxkIGZyb20gJy4uL0V6RmllbGQnO1xuaW1wb3J0IHtmdWxsUmVuZGVyIGFzIHJlbmRlcn0gZnJvbSAnLi4vLi4vLi4vamVzdC1nbG9iYWxzJztcblxuZGVzY3JpYmUoJ0V6RmllbGQnLCAoKSA9PiB7XG4gIGRlc2NyaWJlKCdyYWRpbyBidXR0b24gbGlzdCcsICgpID0+IHtcbiAgICBjb25zdCByYWRpb2J1dHRvblByb3BzID0ge1xuICAgICAgbGFiZWw6ICdTaW5nbGUgY2hvaWNlIGxpc3QnLFxuICAgICAgdHlwZTogJ3JhZGlvJyBhcyAncmFkaW8nLFxuICAgICAgb3B0aW9uczogW1xuICAgICAgICB7bGFiZWw6ICdDaG9pY2UgQScsIHZhbHVlOiAnYSd9LFxuICAgICAgICB7bGFiZWw6ICdDaG9pY2UgQicsIHZhbHVlOiAnYid9LFxuICAgICAgICB7bGFiZWw6ICdDaG9pY2UgQycsIHZhbHVlOiAnYyd9LFxuICAgICAgXSxcbiAgICB9O1xuXG4gICAgaXQoJ3Nob3VsZCByZW5kZXIgcmFkaW8gYnV0dG9uIHdpdGggY29ycmVjdCBzZWxlY3Rpb24nLCAoKSA9PiB7XG4gICAgICBjb25zdCB7Y29udGFpbmVyfSA9IHJlbmRlcig8RXpGaWVsZCB7Li4ucmFkaW9idXR0b25Qcm9wc30gdmFsdWU9XCJjXCIgLz4pO1xuXG4gICAgICBleHBlY3QoZ2V0QnlMYWJlbFRleHQoY29udGFpbmVyLCAnQ2hvaWNlIEEnKSkudG9IYXZlUHJvcGVydHkoJ2NoZWNrZWQnLCBmYWxzZSk7XG4gICAgICBleHBlY3QoZ2V0QnlMYWJlbFRleHQoY29udGFpbmVyLCAnQ2hvaWNlIEInKSkudG9IYXZlUHJvcGVydHkoJ2NoZWNrZWQnLCBmYWxzZSk7XG4gICAgICBleHBlY3QoZ2V0QnlMYWJlbFRleHQoY29udGFpbmVyLCAnQ2hvaWNlIEMnKSkudG9IYXZlUHJvcGVydHkoJ2NoZWNrZWQnLCB0cnVlKTtcblxuICAgICAgY29uc3QgaW5wdXQgPSBnZXRCeUxhYmVsVGV4dChjb250YWluZXIsICdDaG9pY2UgQicpO1xuXG4gICAgICBmaXJlRXZlbnQuY2hhbmdlKGlucHV0LCB7dGFyZ2V0OiB7Y2hlY2tlZDogdHJ1ZX19KTtcblxuICAgICAgZXhwZWN0KGdldEJ5TGFiZWxUZXh0KGNvbnRhaW5lciwgJ0Nob2ljZSBBJykpLnRvSGF2ZVByb3BlcnR5KCdjaGVja2VkJywgZmFsc2UpO1xuICAgICAgZXhwZWN0KGdldEJ5TGFiZWxUZXh0KGNvbnRhaW5lciwgJ0Nob2ljZSBCJykpLnRvSGF2ZVByb3BlcnR5KCdjaGVja2VkJywgdHJ1ZSk7XG4gICAgICBleHBlY3QoZ2V0QnlMYWJlbFRleHQoY29udGFpbmVyLCAnQ2hvaWNlIEMnKSkudG9IYXZlUHJvcGVydHkoJ2NoZWNrZWQnLCBmYWxzZSk7XG4gICAgfSk7XG5cbiAgICBpdCgnc2hvdWxkIHB1Ymxpc2ggY2hhbmdlIGV2ZW50IHdpdGggdGhlIHNlbGVjdGVkIG9wdGlvbicsICgpID0+IHtcbiAgICAgIGxldCB2YWx1ZTtcbiAgICAgIGNvbnN0IG9uQ2hhbmdlID0gZSA9PiB7XG4gICAgICAgIHZhbHVlID0gZS50YXJnZXQudmFsdWU7XG4gICAgICB9O1xuICAgICAgY29uc3Qge2NvbnRhaW5lcn0gPSByZW5kZXIoPEV6RmllbGQgey4uLnJhZGlvYnV0dG9uUHJvcHN9IG9uQ2hhbmdlPXtvbkNoYW5nZX0gdmFsdWU9XCJjXCIgLz4pO1xuXG4gICAgICBjb25zdCBpbnB1dCA9IGdldEJ5TGFiZWxUZXh0KGNvbnRhaW5lciwgJ0Nob2ljZSBCJyk7XG5cbiAgICAgIGZpcmVFdmVudC5jbGljayhpbnB1dCk7XG5cbiAgICAgIGV4cGVjdCh2YWx1ZSkudG9FcXVhbCgnYicpO1xuICAgIH0pO1xuICB9KTtcbn0pO1xuIl19