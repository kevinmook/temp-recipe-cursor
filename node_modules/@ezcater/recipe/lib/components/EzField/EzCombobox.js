"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useComboboxFlyout = exports.useComboboxInput = exports.useCombobox = exports.useComboboxState = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = require("react");

var _Disclosure = require("reakit/Disclosure");

var _hooks = require("../../utils/hooks");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var useComboboxState = function useComboboxState() {
  // eslint-disable-next-line @typescript-eslint/camelcase
  var hidden = (0, _Disclosure.useDisclosureState)({
    unstable_isMounted: true
  });
  return _objectSpread({}, hidden);
};

exports.useComboboxState = useComboboxState;

var useCombobox = function useCombobox(options, htmlProps) {
  var ref = (0, _react.useRef)();
  var optionsRef = (0, _react.useRef)();
  (0, _hooks.useOnClickOutside)(options.hide, [ref, optionsRef]);
  (0, _hooks.useEventListenerOutside)(options.hide, 'focusin', [ref, optionsRef]);
  return _objectSpread({
    role: 'combobox',
    ref: ref,
    optionsRef: optionsRef,
    'aria-expanded': Boolean(options.visible),
    'aria-owns': options.unstable_hiddenId
  }, htmlProps);
};

exports.useCombobox = useCombobox;

var useComboboxInput = function useComboboxInput(options, htmlProps) {
  var ref = (0, _react.useRef)();

  var onKeyDown = function onKeyDown(e) {
    var keyMap = {
      Escape: options.hide,
      ArrowUp: !options.visible && options.show,
      ArrowDown: !options.visible && options.show,
      ' ': !options.visible && options.show
    };
    var action = keyMap[e.key];

    if (action) {
      e.preventDefault();
      action(e);
    }
  };

  return _objectSpread({
    type: 'text',
    ref: ref,
    'aria-controls': options.unstable_hiddenId
  }, htmlProps, {
    onMouseDown: (0, _hooks.useAllCallbacks)(options.toggle, htmlProps.onMouseDown),
    onKeyDown: (0, _hooks.useAllCallbacks)(onKeyDown, htmlProps.onKeyDown)
  });
};

exports.useComboboxInput = useComboboxInput;

var useComboboxFlyout = function useComboboxFlyout(options) {
  var htmlProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  (0, _Disclosure.useDisclosureContent)(options, htmlProps);
  return {
    id: options.unstable_hiddenId
  };
};

exports.useComboboxFlyout = useComboboxFlyout;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0V6RmllbGQvRXpDb21ib2JveC50cyJdLCJuYW1lcyI6WyJ1c2VDb21ib2JveFN0YXRlIiwiaGlkZGVuIiwidW5zdGFibGVfaXNNb3VudGVkIiwidXNlQ29tYm9ib3giLCJvcHRpb25zIiwiaHRtbFByb3BzIiwicmVmIiwib3B0aW9uc1JlZiIsImhpZGUiLCJyb2xlIiwiQm9vbGVhbiIsInZpc2libGUiLCJ1bnN0YWJsZV9oaWRkZW5JZCIsInVzZUNvbWJvYm94SW5wdXQiLCJvbktleURvd24iLCJlIiwia2V5TWFwIiwiRXNjYXBlIiwiQXJyb3dVcCIsInNob3ciLCJBcnJvd0Rvd24iLCJhY3Rpb24iLCJrZXkiLCJwcmV2ZW50RGVmYXVsdCIsInR5cGUiLCJvbk1vdXNlRG93biIsInRvZ2dsZSIsInVzZUNvbWJvYm94Rmx5b3V0IiwiaWQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7OztBQUVPLElBQU1BLGdCQUFnQixHQUFHLFNBQW5CQSxnQkFBbUIsR0FBTTtBQUNwQztBQUNBLE1BQU1DLE1BQU0sR0FBRyxvQ0FBbUI7QUFBQ0MsSUFBQUEsa0JBQWtCLEVBQUU7QUFBckIsR0FBbkIsQ0FBZjtBQUNBLDJCQUNLRCxNQURMO0FBR0QsQ0FOTTs7OztBQVFBLElBQU1FLFdBQVcsR0FBRyxTQUFkQSxXQUFjLENBQUNDLE9BQUQsRUFBVUMsU0FBVixFQUF3QjtBQUNqRCxNQUFNQyxHQUFHLEdBQUcsb0JBQVo7QUFDQSxNQUFNQyxVQUFVLEdBQUcsb0JBQW5CO0FBRUEsZ0NBQWtCSCxPQUFPLENBQUNJLElBQTFCLEVBQWdDLENBQUNGLEdBQUQsRUFBTUMsVUFBTixDQUFoQztBQUNBLHNDQUF3QkgsT0FBTyxDQUFDSSxJQUFoQyxFQUFzQyxTQUF0QyxFQUFpRCxDQUFDRixHQUFELEVBQU1DLFVBQU4sQ0FBakQ7QUFFQTtBQUNFRSxJQUFBQSxJQUFJLEVBQUUsVUFEUjtBQUVFSCxJQUFBQSxHQUFHLEVBQUhBLEdBRkY7QUFHRUMsSUFBQUEsVUFBVSxFQUFWQSxVQUhGO0FBSUUscUJBQWlCRyxPQUFPLENBQUNOLE9BQU8sQ0FBQ08sT0FBVCxDQUoxQjtBQUtFLGlCQUFhUCxPQUFPLENBQUNRO0FBTHZCLEtBTUtQLFNBTkw7QUFRRCxDQWZNOzs7O0FBaUJBLElBQU1RLGdCQUFnQixHQUFHLFNBQW5CQSxnQkFBbUIsQ0FBQ1QsT0FBRCxFQUFVQyxTQUFWLEVBQXdCO0FBQ3RELE1BQU1DLEdBQUcsR0FBRyxvQkFBWjs7QUFFQSxNQUFNUSxTQUFTLEdBQUcsU0FBWkEsU0FBWSxDQUFBQyxDQUFDLEVBQUk7QUFDckIsUUFBTUMsTUFBTSxHQUFHO0FBQ2JDLE1BQUFBLE1BQU0sRUFBRWIsT0FBTyxDQUFDSSxJQURIO0FBRWJVLE1BQUFBLE9BQU8sRUFBRSxDQUFDZCxPQUFPLENBQUNPLE9BQVQsSUFBb0JQLE9BQU8sQ0FBQ2UsSUFGeEI7QUFHYkMsTUFBQUEsU0FBUyxFQUFFLENBQUNoQixPQUFPLENBQUNPLE9BQVQsSUFBb0JQLE9BQU8sQ0FBQ2UsSUFIMUI7QUFJYixXQUFLLENBQUNmLE9BQU8sQ0FBQ08sT0FBVCxJQUFvQlAsT0FBTyxDQUFDZTtBQUpwQixLQUFmO0FBTUEsUUFBTUUsTUFBTSxHQUFHTCxNQUFNLENBQUNELENBQUMsQ0FBQ08sR0FBSCxDQUFyQjs7QUFDQSxRQUFJRCxNQUFKLEVBQVk7QUFDVk4sTUFBQUEsQ0FBQyxDQUFDUSxjQUFGO0FBQ0FGLE1BQUFBLE1BQU0sQ0FBQ04sQ0FBRCxDQUFOO0FBQ0Q7QUFDRixHQVpEOztBQWNBO0FBQ0VTLElBQUFBLElBQUksRUFBRSxNQURSO0FBRUVsQixJQUFBQSxHQUFHLEVBQUhBLEdBRkY7QUFHRSxxQkFBaUJGLE9BQU8sQ0FBQ1E7QUFIM0IsS0FJS1AsU0FKTDtBQUtFb0IsSUFBQUEsV0FBVyxFQUFFLDRCQUFnQnJCLE9BQU8sQ0FBQ3NCLE1BQXhCLEVBQWdDckIsU0FBUyxDQUFDb0IsV0FBMUMsQ0FMZjtBQU1FWCxJQUFBQSxTQUFTLEVBQUUsNEJBQWdCQSxTQUFoQixFQUEyQlQsU0FBUyxDQUFDUyxTQUFyQztBQU5iO0FBUUQsQ0F6Qk07Ozs7QUEyQkEsSUFBTWEsaUJBQWlCLEdBQUcsU0FBcEJBLGlCQUFvQixDQUFDdkIsT0FBRCxFQUE2QjtBQUFBLE1BQW5CQyxTQUFtQix1RUFBUCxFQUFPO0FBQzVELHdDQUFxQkQsT0FBckIsRUFBOEJDLFNBQTlCO0FBQ0EsU0FBTztBQUNMdUIsSUFBQUEsRUFBRSxFQUFFeEIsT0FBTyxDQUFDUTtBQURQLEdBQVA7QUFHRCxDQUxNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHt1c2VSZWZ9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7dXNlRGlzY2xvc3VyZVN0YXRlLCB1c2VEaXNjbG9zdXJlQ29udGVudH0gZnJvbSAncmVha2l0L0Rpc2Nsb3N1cmUnO1xuaW1wb3J0IHt1c2VBbGxDYWxsYmFja3MsIHVzZU9uQ2xpY2tPdXRzaWRlLCB1c2VFdmVudExpc3RlbmVyT3V0c2lkZX0gZnJvbSAnLi4vLi4vdXRpbHMvaG9va3MnO1xuXG5leHBvcnQgY29uc3QgdXNlQ29tYm9ib3hTdGF0ZSA9ICgpID0+IHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9jYW1lbGNhc2VcbiAgY29uc3QgaGlkZGVuID0gdXNlRGlzY2xvc3VyZVN0YXRlKHt1bnN0YWJsZV9pc01vdW50ZWQ6IHRydWV9KTtcbiAgcmV0dXJuIHtcbiAgICAuLi5oaWRkZW4sXG4gIH07XG59O1xuXG5leHBvcnQgY29uc3QgdXNlQ29tYm9ib3ggPSAob3B0aW9ucywgaHRtbFByb3BzKSA9PiB7XG4gIGNvbnN0IHJlZiA9IHVzZVJlZjxIVE1MRWxlbWVudD4oKTtcbiAgY29uc3Qgb3B0aW9uc1JlZiA9IHVzZVJlZjxIVE1MRWxlbWVudD4oKTtcblxuICB1c2VPbkNsaWNrT3V0c2lkZShvcHRpb25zLmhpZGUsIFtyZWYsIG9wdGlvbnNSZWZdKTtcbiAgdXNlRXZlbnRMaXN0ZW5lck91dHNpZGUob3B0aW9ucy5oaWRlLCAnZm9jdXNpbicsIFtyZWYsIG9wdGlvbnNSZWZdKTtcblxuICByZXR1cm4ge1xuICAgIHJvbGU6ICdjb21ib2JveCcsXG4gICAgcmVmLFxuICAgIG9wdGlvbnNSZWYsXG4gICAgJ2FyaWEtZXhwYW5kZWQnOiBCb29sZWFuKG9wdGlvbnMudmlzaWJsZSksXG4gICAgJ2FyaWEtb3ducyc6IG9wdGlvbnMudW5zdGFibGVfaGlkZGVuSWQsXG4gICAgLi4uaHRtbFByb3BzLFxuICB9O1xufTtcblxuZXhwb3J0IGNvbnN0IHVzZUNvbWJvYm94SW5wdXQgPSAob3B0aW9ucywgaHRtbFByb3BzKSA9PiB7XG4gIGNvbnN0IHJlZiA9IHVzZVJlZjxIVE1MSW5wdXRFbGVtZW50PigpO1xuXG4gIGNvbnN0IG9uS2V5RG93biA9IGUgPT4ge1xuICAgIGNvbnN0IGtleU1hcCA9IHtcbiAgICAgIEVzY2FwZTogb3B0aW9ucy5oaWRlLFxuICAgICAgQXJyb3dVcDogIW9wdGlvbnMudmlzaWJsZSAmJiBvcHRpb25zLnNob3csXG4gICAgICBBcnJvd0Rvd246ICFvcHRpb25zLnZpc2libGUgJiYgb3B0aW9ucy5zaG93LFxuICAgICAgJyAnOiAhb3B0aW9ucy52aXNpYmxlICYmIG9wdGlvbnMuc2hvdyxcbiAgICB9O1xuICAgIGNvbnN0IGFjdGlvbiA9IGtleU1hcFtlLmtleV07XG4gICAgaWYgKGFjdGlvbikge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgYWN0aW9uKGUpO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4ge1xuICAgIHR5cGU6ICd0ZXh0JyxcbiAgICByZWYsXG4gICAgJ2FyaWEtY29udHJvbHMnOiBvcHRpb25zLnVuc3RhYmxlX2hpZGRlbklkLFxuICAgIC4uLmh0bWxQcm9wcyxcbiAgICBvbk1vdXNlRG93bjogdXNlQWxsQ2FsbGJhY2tzKG9wdGlvbnMudG9nZ2xlLCBodG1sUHJvcHMub25Nb3VzZURvd24pLFxuICAgIG9uS2V5RG93bjogdXNlQWxsQ2FsbGJhY2tzKG9uS2V5RG93biwgaHRtbFByb3BzLm9uS2V5RG93biksXG4gIH07XG59O1xuXG5leHBvcnQgY29uc3QgdXNlQ29tYm9ib3hGbHlvdXQgPSAob3B0aW9ucywgaHRtbFByb3BzID0ge30pID0+IHtcbiAgdXNlRGlzY2xvc3VyZUNvbnRlbnQob3B0aW9ucywgaHRtbFByb3BzKTtcbiAgcmV0dXJuIHtcbiAgICBpZDogb3B0aW9ucy51bnN0YWJsZV9oaWRkZW5JZCxcbiAgfTtcbn07XG4iXX0=