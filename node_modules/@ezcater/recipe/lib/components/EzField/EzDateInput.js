"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _dayjs = _interopRequireDefault(require("dayjs"));

var _EzTextInput = _interopRequireDefault(require("./EzTextInput"));

var _EzDateInput = require("./EzDateInput.styles");

var _EzCalendar = _interopRequireDefault(require("../EzCalendar/EzCalendar"));

var _EzCombobox = require("./EzCombobox");

var _hooks = require("../../utils/hooks");

var _Icons = require("../Icons");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var CLOSE_CALENDAR_ON_SELECT_DELAY_MS = 100;

var EzDateInput = function EzDateInput(_ref) {
  var id = _ref.id,
      name = _ref.name,
      disabled = _ref.disabled,
      _onChange = _ref.onChange,
      ariaLabelledBy = _ref['aria-labelledby'],
      props = (0, _objectWithoutProperties2["default"])(_ref, ["id", "name", "disabled", "onChange", "aria-labelledby"]);
  var _props$placeholder = props.placeholder,
      placeholder = _props$placeholder === void 0 ? 'Select date' : _props$placeholder;

  var _useState = (0, _react.useState)(props.value),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      value = _useState2[0],
      setValue = _useState2[1];

  var _useState3 = (0, _react.useState)(null),
      _useState4 = (0, _slicedToArray2["default"])(_useState3, 2),
      validDate = _useState4[0],
      setValidDate = _useState4[1];

  var comboboxState = (0, _EzCombobox.useComboboxState)();

  var _useCombobox = (0, _EzCombobox.useCombobox)(comboboxState, _objectSpread({}, props, {
    'aria-haspopup': true,
    disabled: disabled,
    opened: comboboxState.visible
  })),
      clickOutsideRef = _useCombobox.ref,
      combobox = (0, _objectWithoutProperties2["default"])(_useCombobox, ["ref"]);

  var hide = comboboxState.hide,
      visible = comboboxState.visible;
  var timeout = (0, _react.useRef)(null);
  (0, _react.useEffect)(function () {
    return function () {
      return clearTimeout(timeout.current);
    };
  }, []);
  (0, _react.useEffect)(function () {
    if ((0, _dayjs["default"])(value).isValid()) setValidDate(value);
  }, [value]);
  (0, _hooks.useUpdateEffect)(function () {
    _onChange(validDate);
  }, [validDate, _onChange]);
  var comboboxInput = (0, _EzCombobox.useComboboxInput)(comboboxState, {
    id: id,
    name: name,
    value: value,
    'aria-labelledby': ariaLabelledBy,
    onChange: function onChange(e) {
      setValue(e.target.value);

      _onChange(e.target.value);
    },
    disabled: disabled,
    placeholder: placeholder,
    error: props.error,
    touched: props.touched
  });
  var comboboxFlyout = (0, _EzCombobox.useComboboxFlyout)(comboboxState);
  var minDate = props.minDate,
      maxDate = props.maxDate,
      filterDate = props.filterDate;
  return _react["default"].createElement(_EzDateInput.Container, {
    ref: clickOutsideRef,
    hasError: props.touched && props.error,
    opened: visible
  }, _react["default"].createElement(_EzDateInput.Combobox, combobox, _react["default"].createElement(_Icons.InsetIcon, {
    insetY0: true,
    left0: true,
    pl3: true
  }, _react["default"].createElement(_Icons.CalendarIcon, null)), _react["default"].createElement(_EzTextInput["default"], comboboxInput), _react["default"].createElement(_Icons.InsetIcon, {
    insetY0: true,
    right0: true,
    pr2: true
  }, _react["default"].createElement(_Icons.ChevronIcon, {
    flip: visible
  }))), visible && _react["default"].createElement(_EzDateInput.CalendarWrapper, (0, _extends2["default"])({}, comboboxFlyout, {
    onKeyDown: function onKeyDown(event) {
      if (event.key === 'Escape') hide();
    }
  }), _react["default"].createElement(_EzCalendar["default"], (0, _extends2["default"])({
    minDate: minDate,
    maxDate: maxDate,
    filterDate: filterDate
  }, {
    value: validDate,
    onChange: function onChange(date) {
      setValue(date);
      comboboxInput.ref.current.focus();
      timeout.current = setTimeout(hide, CLOSE_CALENDAR_ON_SELECT_DELAY_MS);
    }
  }))));
};

var _default = EzDateInput;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,