"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireDefault(require("react"));

var _dayjs = _interopRequireDefault(require("dayjs"));

var _en = _interopRequireDefault(require("./en"));

var _hooks = require("../../utils/hooks");

var _EzTimeInput = require("./EzTimeInput.styles");

var _EzSelect = _interopRequireDefault(require("./EzSelect"));

var _Icons = require("../Icons");

var repeat = function repeat(n) {
  return new Array(n).fill(null);
};

var formatTime = function formatTime(time) {
  return time.toLocaleLowerCase().replace(/([0-9]{2})([a-z]{2})$/, '$1 $2');
};

var useTimeRangeOptions = function useTimeRangeOptions(_ref) {
  var start = _ref.start,
      end = _ref.end,
      step = _ref.step;

  var _useTranslation = (0, _hooks.useTranslation)(_en["default"]),
      t = _useTranslation.t;

  var date = (0, _dayjs["default"])().format(t('DATE_FORMAT'));
  var startTime = (0, _dayjs["default"])("".concat(date, " ").concat(formatTime(start)));
  var endTime = (0, _dayjs["default"])("".concat(date, " ").concat(formatTime(end)));
  var interval = Math.floor(endTime.diff(startTime, 'minute') / step) + 1;
  return repeat(interval).map(function (_, i) {
    return startTime.add(step * i, 'minute').format(t('TIME_FORMAT'));
  });
};

var _default = function _default(_ref2) {
  var start = _ref2.start,
      end = _ref2.end,
      _ref2$step = _ref2.step,
      step = _ref2$step === void 0 ? 60 : _ref2$step,
      value = _ref2.value,
      rest = (0, _objectWithoutProperties2["default"])(_ref2, ["start", "end", "step", "value"]);

  var _useTranslation2 = (0, _hooks.useTranslation)(_en["default"]),
      t = _useTranslation2.t;

  var date = (0, _dayjs["default"])().format(t('DATE_FORMAT'));
  var valueTime = (0, _dayjs["default"])("".concat(date, " ").concat(value));
  var valueTimeString = valueTime.format(t('TIME_FORMAT'));
  var error = rest.error,
      touched = rest.touched;
  var options = useTimeRangeOptions({
    start: start,
    end: end,
    step: step
  });
  return _react["default"].createElement(_EzTimeInput.TimeInput, null, _react["default"].createElement(_Icons.InsetIcon, {
    insetY0: true,
    left0: true,
    pl3: true
  }, _react["default"].createElement(_Icons.ClockIcon, null)), _react["default"].createElement(_EzSelect["default"], (0, _extends2["default"])({
    id: rest.id,
    label: rest.label
  }, {
    error: error,
    touched: touched
  }, {
    placeholder: rest.placeholder,
    options: options.map(function (option) {
      return {
        label: option,
        value: option
      };
    }),
    value: valueTimeString,
    onChange: rest.onChange,
    "aria-labelledby": rest['aria-labelledby']
  })));
};

exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0V6RmllbGQvRXpUaW1lSW5wdXQudHN4Il0sIm5hbWVzIjpbInJlcGVhdCIsIm4iLCJBcnJheSIsImZpbGwiLCJmb3JtYXRUaW1lIiwidGltZSIsInRvTG9jYWxlTG93ZXJDYXNlIiwicmVwbGFjZSIsInVzZVRpbWVSYW5nZU9wdGlvbnMiLCJzdGFydCIsImVuZCIsInN0ZXAiLCJlbiIsInQiLCJkYXRlIiwiZm9ybWF0Iiwic3RhcnRUaW1lIiwiZW5kVGltZSIsImludGVydmFsIiwiTWF0aCIsImZsb29yIiwiZGlmZiIsIm1hcCIsIl8iLCJpIiwiYWRkIiwidmFsdWUiLCJyZXN0IiwidmFsdWVUaW1lIiwidmFsdWVUaW1lU3RyaW5nIiwiZXJyb3IiLCJ0b3VjaGVkIiwib3B0aW9ucyIsImlkIiwibGFiZWwiLCJwbGFjZWhvbGRlciIsIm9wdGlvbiIsIm9uQ2hhbmdlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBRUEsSUFBTUEsTUFBTSxHQUFHLFNBQVRBLE1BQVMsQ0FBQUMsQ0FBQztBQUFBLFNBQUksSUFBSUMsS0FBSixDQUFVRCxDQUFWLEVBQWFFLElBQWIsQ0FBa0IsSUFBbEIsQ0FBSjtBQUFBLENBQWhCOztBQUVBLElBQU1DLFVBQVUsR0FBRyxTQUFiQSxVQUFhLENBQUNDLElBQUQ7QUFBQSxTQUNqQkEsSUFBSSxDQUFDQyxpQkFBTCxHQUF5QkMsT0FBekIsQ0FBaUMsdUJBQWpDLEVBQTJELE9BQTNELENBRGlCO0FBQUEsQ0FBbkI7O0FBR0EsSUFBTUMsbUJBQW1CLEdBQUcsU0FBdEJBLG1CQUFzQixPQUF3QjtBQUFBLE1BQXRCQyxLQUFzQixRQUF0QkEsS0FBc0I7QUFBQSxNQUFmQyxHQUFlLFFBQWZBLEdBQWU7QUFBQSxNQUFWQyxJQUFVLFFBQVZBLElBQVU7O0FBQUEsd0JBQ3RDLDJCQUFlQyxjQUFmLENBRHNDO0FBQUEsTUFDM0NDLENBRDJDLG1CQUMzQ0EsQ0FEMkM7O0FBR2xELE1BQU1DLElBQUksR0FBRyx5QkFBUUMsTUFBUixDQUFlRixDQUFDLENBQUMsYUFBRCxDQUFoQixDQUFiO0FBQ0EsTUFBTUcsU0FBUyxHQUFHLGlDQUFTRixJQUFULGNBQWlCVixVQUFVLENBQUNLLEtBQUQsQ0FBM0IsRUFBbEI7QUFDQSxNQUFNUSxPQUFPLEdBQUcsaUNBQVNILElBQVQsY0FBaUJWLFVBQVUsQ0FBQ00sR0FBRCxDQUEzQixFQUFoQjtBQUNBLE1BQU1RLFFBQVEsR0FBR0MsSUFBSSxDQUFDQyxLQUFMLENBQVdILE9BQU8sQ0FBQ0ksSUFBUixDQUFhTCxTQUFiLEVBQXdCLFFBQXhCLElBQW9DTCxJQUEvQyxJQUF1RCxDQUF4RTtBQUVBLFNBQU9YLE1BQU0sQ0FBQ2tCLFFBQUQsQ0FBTixDQUFpQkksR0FBakIsQ0FBcUIsVUFBQ0MsQ0FBRCxFQUFJQyxDQUFKO0FBQUEsV0FBVVIsU0FBUyxDQUFDUyxHQUFWLENBQWNkLElBQUksR0FBR2EsQ0FBckIsRUFBd0IsUUFBeEIsRUFBa0NULE1BQWxDLENBQXlDRixDQUFDLENBQUMsYUFBRCxDQUExQyxDQUFWO0FBQUEsR0FBckIsQ0FBUDtBQUNELENBVEQ7O2VBV2UseUJBQTZDO0FBQUEsTUFBM0NKLEtBQTJDLFNBQTNDQSxLQUEyQztBQUFBLE1BQXBDQyxHQUFvQyxTQUFwQ0EsR0FBb0M7QUFBQSx5QkFBL0JDLElBQStCO0FBQUEsTUFBL0JBLElBQStCLDJCQUF4QixFQUF3QjtBQUFBLE1BQXBCZSxLQUFvQixTQUFwQkEsS0FBb0I7QUFBQSxNQUFWQyxJQUFVOztBQUFBLHlCQUM5QywyQkFBZWYsY0FBZixDQUQ4QztBQUFBLE1BQ25EQyxDQURtRCxvQkFDbkRBLENBRG1EOztBQUcxRCxNQUFNQyxJQUFJLEdBQUcseUJBQVFDLE1BQVIsQ0FBZUYsQ0FBQyxDQUFDLGFBQUQsQ0FBaEIsQ0FBYjtBQUNBLE1BQU1lLFNBQVMsR0FBRyxpQ0FBU2QsSUFBVCxjQUFpQlksS0FBakIsRUFBbEI7QUFDQSxNQUFNRyxlQUFlLEdBQUdELFNBQVMsQ0FBQ2IsTUFBVixDQUFpQkYsQ0FBQyxDQUFDLGFBQUQsQ0FBbEIsQ0FBeEI7QUFMMEQsTUFNbkRpQixLQU5tRCxHQU1qQ0gsSUFOaUMsQ0FNbkRHLEtBTm1EO0FBQUEsTUFNNUNDLE9BTjRDLEdBTWpDSixJQU5pQyxDQU01Q0ksT0FONEM7QUFRMUQsTUFBTUMsT0FBTyxHQUFHeEIsbUJBQW1CLENBQUM7QUFBQ0MsSUFBQUEsS0FBSyxFQUFMQSxLQUFEO0FBQVFDLElBQUFBLEdBQUcsRUFBSEEsR0FBUjtBQUFhQyxJQUFBQSxJQUFJLEVBQUpBO0FBQWIsR0FBRCxDQUFuQztBQUNBLFNBQ0UsZ0NBQUMsc0JBQUQsUUFDRSxnQ0FBQyxnQkFBRDtBQUFXLElBQUEsT0FBTyxNQUFsQjtBQUFtQixJQUFBLEtBQUssTUFBeEI7QUFBeUIsSUFBQSxHQUFHO0FBQTVCLEtBQ0UsZ0NBQUMsZ0JBQUQsT0FERixDQURGLEVBSUUsZ0NBQUMsb0JBQUQ7QUFDRSxJQUFBLEVBQUUsRUFBRWdCLElBQUksQ0FBQ00sRUFEWDtBQUVFLElBQUEsS0FBSyxFQUFFTixJQUFJLENBQUNPO0FBRmQsS0FHTTtBQUFDSixJQUFBQSxLQUFLLEVBQUxBLEtBQUQ7QUFBUUMsSUFBQUEsT0FBTyxFQUFQQTtBQUFSLEdBSE47QUFJRSxJQUFBLFdBQVcsRUFBRUosSUFBSSxDQUFDUSxXQUpwQjtBQUtFLElBQUEsT0FBTyxFQUFFSCxPQUFPLENBQUNWLEdBQVIsQ0FBWSxVQUFBYyxNQUFNO0FBQUEsYUFBSztBQUM5QkYsUUFBQUEsS0FBSyxFQUFFRSxNQUR1QjtBQUU5QlYsUUFBQUEsS0FBSyxFQUFFVTtBQUZ1QixPQUFMO0FBQUEsS0FBbEIsQ0FMWDtBQVNFLElBQUEsS0FBSyxFQUFFUCxlQVRUO0FBVUUsSUFBQSxRQUFRLEVBQUVGLElBQUksQ0FBQ1UsUUFWakI7QUFXRSx1QkFBaUJWLElBQUksQ0FBQyxpQkFBRDtBQVh2QixLQUpGLENBREY7QUFvQkQsQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgZGF5anMgZnJvbSAnZGF5anMnO1xuaW1wb3J0IGVuIGZyb20gJy4vZW4nO1xuaW1wb3J0IHt1c2VUcmFuc2xhdGlvbn0gZnJvbSAnLi4vLi4vdXRpbHMvaG9va3MnO1xuaW1wb3J0IHtUaW1lSW5wdXR9IGZyb20gJy4vRXpUaW1lSW5wdXQuc3R5bGVzJztcbmltcG9ydCBFelNlbGVjdCBmcm9tICcuL0V6U2VsZWN0JztcbmltcG9ydCB7Q2xvY2tJY29uLCBJbnNldEljb259IGZyb20gJy4uL0ljb25zJztcblxuY29uc3QgcmVwZWF0ID0gbiA9PiBuZXcgQXJyYXkobikuZmlsbChudWxsKTtcblxuY29uc3QgZm9ybWF0VGltZSA9ICh0aW1lOiBzdHJpbmcpID0+XG4gIHRpbWUudG9Mb2NhbGVMb3dlckNhc2UoKS5yZXBsYWNlKC8oWzAtOV17Mn0pKFthLXpdezJ9KSQvdSwgJyQxICQyJyk7XG5cbmNvbnN0IHVzZVRpbWVSYW5nZU9wdGlvbnMgPSAoe3N0YXJ0LCBlbmQsIHN0ZXB9KSA9PiB7XG4gIGNvbnN0IHt0fSA9IHVzZVRyYW5zbGF0aW9uKGVuKTtcblxuICBjb25zdCBkYXRlID0gZGF5anMoKS5mb3JtYXQodCgnREFURV9GT1JNQVQnKSk7XG4gIGNvbnN0IHN0YXJ0VGltZSA9IGRheWpzKGAke2RhdGV9ICR7Zm9ybWF0VGltZShzdGFydCl9YCk7XG4gIGNvbnN0IGVuZFRpbWUgPSBkYXlqcyhgJHtkYXRlfSAke2Zvcm1hdFRpbWUoZW5kKX1gKTtcbiAgY29uc3QgaW50ZXJ2YWwgPSBNYXRoLmZsb29yKGVuZFRpbWUuZGlmZihzdGFydFRpbWUsICdtaW51dGUnKSAvIHN0ZXApICsgMTtcblxuICByZXR1cm4gcmVwZWF0KGludGVydmFsKS5tYXAoKF8sIGkpID0+IHN0YXJ0VGltZS5hZGQoc3RlcCAqIGksICdtaW51dGUnKS5mb3JtYXQodCgnVElNRV9GT1JNQVQnKSkpO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgKHtzdGFydCwgZW5kLCBzdGVwID0gNjAsIHZhbHVlLCAuLi5yZXN0fSkgPT4ge1xuICBjb25zdCB7dH0gPSB1c2VUcmFuc2xhdGlvbihlbik7XG5cbiAgY29uc3QgZGF0ZSA9IGRheWpzKCkuZm9ybWF0KHQoJ0RBVEVfRk9STUFUJykpO1xuICBjb25zdCB2YWx1ZVRpbWUgPSBkYXlqcyhgJHtkYXRlfSAke3ZhbHVlfWApO1xuICBjb25zdCB2YWx1ZVRpbWVTdHJpbmcgPSB2YWx1ZVRpbWUuZm9ybWF0KHQoJ1RJTUVfRk9STUFUJykpO1xuICBjb25zdCB7ZXJyb3IsIHRvdWNoZWR9ID0gcmVzdDtcblxuICBjb25zdCBvcHRpb25zID0gdXNlVGltZVJhbmdlT3B0aW9ucyh7c3RhcnQsIGVuZCwgc3RlcH0pO1xuICByZXR1cm4gKFxuICAgIDxUaW1lSW5wdXQ+XG4gICAgICA8SW5zZXRJY29uIGluc2V0WTAgbGVmdDAgcGwzPlxuICAgICAgICA8Q2xvY2tJY29uIC8+XG4gICAgICA8L0luc2V0SWNvbj5cbiAgICAgIDxFelNlbGVjdFxuICAgICAgICBpZD17cmVzdC5pZH1cbiAgICAgICAgbGFiZWw9e3Jlc3QubGFiZWx9XG4gICAgICAgIHsuLi57ZXJyb3IsIHRvdWNoZWR9fVxuICAgICAgICBwbGFjZWhvbGRlcj17cmVzdC5wbGFjZWhvbGRlcn1cbiAgICAgICAgb3B0aW9ucz17b3B0aW9ucy5tYXAob3B0aW9uID0+ICh7XG4gICAgICAgICAgbGFiZWw6IG9wdGlvbixcbiAgICAgICAgICB2YWx1ZTogb3B0aW9uLFxuICAgICAgICB9KSl9XG4gICAgICAgIHZhbHVlPXt2YWx1ZVRpbWVTdHJpbmd9XG4gICAgICAgIG9uQ2hhbmdlPXtyZXN0Lm9uQ2hhbmdlfVxuICAgICAgICBhcmlhLWxhYmVsbGVkYnk9e3Jlc3RbJ2FyaWEtbGFiZWxsZWRieSddfVxuICAgICAgLz5cbiAgICA8L1RpbWVJbnB1dD5cbiAgKTtcbn07XG4iXX0=