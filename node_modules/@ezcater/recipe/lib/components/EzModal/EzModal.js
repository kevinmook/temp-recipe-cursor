"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var _Dialog = require("reakit/Dialog");

var _Portal = require("reakit/Portal");

var _EzButton = _interopRequireDefault(require("../EzButton"));

var _EzHeading = _interopRequireDefault(require("../EzHeading"));

var _EzLayout = _interopRequireDefault(require("../EzLayout"));

var _EzModal = require("./EzModal.styles");

var _CloseButton = _interopRequireDefault(require("../CloseButton"));

var _hooks = require("../../utils/hooks");

var _EzPortal = _interopRequireWildcard(require("../EzPortal"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var PortalledOverlay = function PortalledOverlay(_ref) {
  var children = _ref.children,
      props = (0, _objectWithoutProperties2["default"])(_ref, ["children"]);
  return _react["default"].createElement(_EzPortal["default"], null, _react["default"].createElement(_EzModal.StyledOverlay, (0, _Dialog.useDialogBackdrop)(props), children));
};

var Dialog = function Dialog(_ref2) {
  var isOpen = _ref2.isOpen,
      children = _ref2.children,
      props = (0, _objectWithoutProperties2["default"])(_ref2, ["isOpen", "children"]);

  var _useContext = (0, _react.useContext)(_EzPortal.PortalContext),
      hostNode = _useContext.current;

  var initialFocusRef = (0, _react.useRef)();
  var ref = (0, _react.useRef)();
  (0, _react.useEffect)(function () {
    if (isOpen) initialFocusRef.current = hostNode.ownerDocument.activeElement;
  }, [hostNode, isOpen]);
  var preventBodyScroll = hostNode === document.body;
  var dialog = (0, _Dialog.useDialog)(_objectSpread({}, props, {
    // eslint-disable-next-line @typescript-eslint/camelcase
    unstable_finalFocusRef: initialFocusRef,
    preventBodyScroll: preventBodyScroll
  }), {
    ref: ref
  }); // eslint-disable-next-line no-underscore-dangle

  _Portal.Portal.__selector = "#".concat(dialog.id);
  return _react["default"].createElement(_EzModal.StyledDialog, (0, _extends2["default"])({}, dialog, {
    tabIndex: 0
  }), _react["default"].createElement(_EzPortal.PortalContext.Provider, {
    value: ref
  }, props.visible && children));
};

var EzModal = function EzModal(_ref3) {
  var children = _ref3.children,
      headerText = _ref3.headerText,
      destructive = _ref3.destructive,
      dismissLabel = _ref3.dismissLabel,
      isOpen = _ref3.isOpen,
      isSubmitting = _ref3.isSubmitting,
      initialOnDismiss = _ref3.onDismiss,
      onSubmit = _ref3.onSubmit,
      submitLabel = _ref3.submitLabel;
  var labelId = (0, _hooks.useUniqueId)(); // JSDOM doesn't support this API

  var modalOption = {
    modal: Boolean(Element.prototype.insertAdjacentElement)
  };
  var dialog = (0, _Dialog.useDialogState)(_objectSpread({
    visible: isOpen
  }, modalOption));

  var _useRef = (0, _react.useRef)(initialOnDismiss),
      onDismiss = _useRef.current;

  dialog.hide = onDismiss;
  dialog.visible = isOpen;
  return _react["default"].createElement(PortalledOverlay, dialog, _react["default"].createElement(Dialog, (0, _extends2["default"])({}, dialog, {
    isOpen: isOpen,
    "aria-labelledby": labelId
  }), _react["default"].createElement(_EzModal.HeaderContainer, null, _react["default"].createElement(_EzHeading["default"], {
    size: "2",
    id: labelId
  }, headerText), _react["default"].createElement(_CloseButton["default"], {
    label: dismissLabel,
    onClick: onDismiss
  })), _react["default"].createElement(_EzModal.ContentContainer, null, children), _react["default"].createElement(_EzModal.ButtonFooter, null, _react["default"].createElement(_EzLayout["default"], {
    layout: {
      base: 'stack',
      medium: 'basic'
    }
  }, submitLabel && _react["default"].createElement(_EzButton["default"], {
    use: "primary",
    destructive: destructive,
    onClick: onSubmit,
    loading: isSubmitting
  }, submitLabel), _react["default"].createElement(_EzButton["default"], {
    use: "secondary",
    disabled: isSubmitting,
    onClick: onDismiss
  }, dismissLabel)))));
};

var _default = EzModal;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,