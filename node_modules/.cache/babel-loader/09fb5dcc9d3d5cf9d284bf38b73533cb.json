{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _EzCard = require(\"../EzCard\");\n\nvar _EzCheckbox = _interopRequireDefault(require(\"../EzCheckbox\"));\n\nvar _EzButton = _interopRequireDefault(require(\"../EzButton\"));\n\nvar _EzLayout = _interopRequireDefault(require(\"../EzLayout\"));\n\nvar _EzTable = require(\"./EzTable.styles\");\n\nvar _useSorting2 = _interopRequireDefault(require(\"./useSorting\"));\n\nvar _en = _interopRequireDefault(require(\"./en\"));\n\nvar _utils = require(\"../../utils\");\n\nvar _hooks = require(\"../../utils/hooks\");\n\nvar _useOverflowDetection3 = _interopRequireDefault(require(\"./useOverflowDetection\"));\n\nvar _useExpandedClickTarget = _interopRequireDefault(require(\"./useExpandedClickTarget\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar TableContext = (0, _react.createContext)(null);\n\nvar SortDirection = function SortDirection(_ref) {\n  var direction = _ref.direction;\n  return _react[\"default\"].createElement(\"svg\", {\n    width: \"0.5em\",\n    height: \"0.4em\",\n    viewBox: \"0 0 1 1\",\n    preserveAspectRatio: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    version: \"1.1\"\n  }, direction === 'asc' ? _react[\"default\"].createElement(\"polygon\", {\n    points: \"0.5,0 1,1 0,1\"\n  }) : _react[\"default\"].createElement(\"polygon\", {\n    points: \"0.5,1 0,0 1,0\"\n  }));\n};\n\nvar Thead = function Thead() {\n  var _React$useContext = _react[\"default\"].useContext(TableContext),\n      columns = _React$useContext.columns,\n      items = _React$useContext.items,\n      sorting = _React$useContext.sorting,\n      selection = _React$useContext.selection;\n\n  var col = columns.find(function (c) {\n    return c.defaultSort;\n  });\n  var initialSort = col && {\n    column: col,\n    direction: col.defaultSort\n  };\n\n  var _useSorting = (0, _useSorting2[\"default\"])(initialSort),\n      direction = _useSorting.direction,\n      _onClick = _useSorting.onClick,\n      isSorted = _useSorting.isSorted;\n\n  return _react[\"default\"].createElement(\"thead\", null, _react[\"default\"].createElement(\"tr\", null, selection && _react[\"default\"].createElement(_EzTable.Th, null, _react[\"default\"].createElement(_EzCheckbox[\"default\"], {\n    label: \"Select all\",\n    onChange: selection.onBulkSelectClick,\n    checked: items.length === selection.selected.length\n  })), columns.map(function (column, cellIndex) {\n    var sortable = column.sortable,\n        heading = column.heading,\n        numeric = column.numeric;\n    return _react[\"default\"].createElement(_EzTable.Th, {\n      key: column.key || cellIndex,\n      numeric: numeric,\n      sortable: sortable,\n      sorted: isSorted(column),\n      onClick: function onClick(event) {\n        return _onClick(event, column, sorting.onSortClick);\n      }\n    }, _react[\"default\"].createElement(\"span\", null, heading, \" \", sortable && _react[\"default\"].createElement(SortDirection, {\n      direction: direction\n    })));\n  })), _react[\"default\"].createElement(SelectionStateBanner, null));\n};\n\nvar SelectionStateBanner = function SelectionStateBanner() {\n  var _useTranslation = (0, _hooks.useTranslation)(_en[\"default\"]),\n      t = _useTranslation.t;\n\n  var _useContext = (0, _react.useContext)(TableContext),\n      columns = _useContext.columns,\n      items = _useContext.items,\n      selection = _useContext.selection,\n      pagination = _useContext.pagination;\n\n  if (!selection || !pagination) return null;\n  if (!selection.onSelectAllClick) return null;\n  if (selection.selected.length !== items.length && !selection.allSelected) return null;\n  return _react[\"default\"].createElement(\"tr\", null, _react[\"default\"].createElement(\"td\", {\n    colSpan: columns.length + 1\n  }, _react[\"default\"].createElement(_EzLayout[\"default\"], {\n    layout: \"basic\"\n  }, selection.allSelected || items.length === pagination.totalRows ? _react[\"default\"].createElement(\"span\", null, t('All {{totalRowCount}} rows are selected.', {\n    totalRowCount: pagination.totalRows\n  })) : _react[\"default\"].createElement(_react[\"default\"].Fragment, null, _react[\"default\"].createElement(\"span\", null, t('All {{selectedCount}} rows on this page are selected.', {\n    selectedCount: selection.selected.length\n  })), _react[\"default\"].createElement(_EzButton[\"default\"], {\n    use: \"tertiary\",\n    onClick: (0, _utils.wrapEvent)(selection.onSelectAllClick, function () {\n      return selection.setAllSelected(true);\n    })\n  }, t('Select all {{totalRowCount}} rows', {\n    totalRowCount: pagination.totalRows\n  }))), _react[\"default\"].createElement(_EzButton[\"default\"], {\n    use: \"tertiary\",\n    onClick: selection.onSelectNoneClick\n  }, t('Clear selection')))));\n};\n\nvar TRow = function TRow(_ref2) {\n  var item = _ref2.item;\n\n  var _useContext2 = (0, _react.useContext)(TableContext),\n      columns = _useContext2.columns,\n      selection = _useContext2.selection;\n\n  var _useExpandedClickTarg = (0, _useExpandedClickTarget[\"default\"])(),\n      _useExpandedClickTarg2 = (0, _slicedToArray2[\"default\"])(_useExpandedClickTarg, 2),\n      targetRef = _useExpandedClickTarg2[0],\n      _useExpandedClickTarg3 = _useExpandedClickTarg2[1],\n      ref = _useExpandedClickTarg3.ref,\n      clickable = _useExpandedClickTarg3.clickable,\n      onClick = _useExpandedClickTarg3.onClick,\n      onMouseEnter = _useExpandedClickTarg3.onMouseEnter;\n\n  return _react[\"default\"].createElement(_EzTable.ClickableTr, {\n    ref: ref,\n    clickable: clickable,\n    onClick: onClick,\n    onMouseEnter: onMouseEnter\n  }, selection && _react[\"default\"].createElement(_EzTable.Td, null, _react[\"default\"].createElement(_EzCheckbox[\"default\"], {\n    label: \"Select row\",\n    checked: selection.selected.includes(item),\n    onChange: function onChange(event) {\n      return selection.onRowSelectClick(event, {\n        item: item\n      });\n    }\n  })), columns.map(function (_ref3, cellIndex) {\n    var component = _ref3.component,\n        numeric = _ref3.numeric;\n    return _react[\"default\"].createElement(_EzTable.Td, {\n      key: cellIndex,\n      numeric: numeric\n    }, (0, _react.createElement)(component, {\n      item: item,\n      linkRef: targetRef\n    }));\n  }));\n};\n\nvar Tbody = function Tbody() {\n  var _useContext3 = (0, _react.useContext)(TableContext),\n      items = _useContext3.items;\n\n  return _react[\"default\"].createElement(\"tbody\", null, items.map(function (item, rowIndex) {\n    return _react[\"default\"].createElement(TRow, {\n      key: rowIndex,\n      item: item\n    });\n  }));\n};\n\nvar TablePagination = function TablePagination(_ref4) {\n  var pagination = _ref4.pagination;\n\n  var _useTranslation2 = (0, _hooks.useTranslation)(_en[\"default\"]),\n      t = _useTranslation2.t;\n\n  var pages = Math.ceil(pagination.totalRows / pagination.rowsPerPage);\n  return _react[\"default\"].createElement(_EzCard.EzCardFooter, null, _react[\"default\"].createElement(_EzLayout[\"default\"], {\n    layout: \"split\"\n  }, _react[\"default\"].createElement(_EzTable.TablePaginationNavItems, null, _react[\"default\"].createElement(_EzButton[\"default\"], {\n    use: \"tertiary\",\n    onClick: pagination.onPrevPageClick,\n    disabled: pagination.currentPage === 1\n  }, '‹ ', t('Previous Page')), _react[\"default\"].createElement(\"span\", null, t('Page {{currentPage}} of {{pages}}', {\n    currentPage: pagination.currentPage,\n    pages: pages\n  })), _react[\"default\"].createElement(_EzButton[\"default\"], {\n    use: \"tertiary\",\n    onClick: pagination.onNextPageClick,\n    disabled: pagination.currentPage === pages\n  }, t('Next Page'), ' ›')), _react[\"default\"].createElement(_EzTable.TablePaginationRowCountDropdown, {\n    defaultValue: pagination.rowsPerPage,\n    onChange: pagination.onRowsPerPageChange\n  }, pagination.rowsPerPageOptions.map(function (value) {\n    return _react[\"default\"].createElement(\"option\", {\n      key: value,\n      value: value\n    }, t('{{num}} rows per page', {\n      num: value\n    }));\n  }))));\n};\n/**\n * Tables display information in a way that’s easy to scan,\n * so that users can look for patterns and insights.\n * They can be embedded in primary content, such as cards.\n */\n\n\nvar EzTable = function EzTable(_ref5) {\n  var actions = _ref5.actions,\n      title = _ref5.title,\n      subtitle = _ref5.subtitle,\n      columns = _ref5.columns,\n      items = _ref5.items,\n      selection = _ref5.selection,\n      onSortClick = _ref5.onSortClick,\n      pagination = _ref5.pagination;\n\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2[\"default\"])(_useState, 2),\n      allSelected = _useState2[0],\n      setAllSelected = _useState2[1];\n\n  var selected = selection && items.filter(selection.isRowSelected);\n  var numSelectedOnPage = selected && selected.length;\n\n  var _ref6 = pagination || {},\n      currentPage = _ref6.currentPage,\n      rowsPerPage = _ref6.rowsPerPage;\n\n  var _useScrollPosition = (0, _hooks.useScrollPosition)(),\n      _useScrollPosition2 = (0, _slicedToArray2[\"default\"])(_useScrollPosition, 2),\n      x = _useScrollPosition2[0].x,\n      scrollEvents = _useScrollPosition2[1];\n\n  var isScrolling = x > 0;\n\n  var _useOverflowDetection = (0, _useOverflowDetection3[\"default\"])(),\n      _useOverflowDetection2 = (0, _slicedToArray2[\"default\"])(_useOverflowDetection, 2),\n      isOverflowing = _useOverflowDetection2[0],\n      overflowDetection = _useOverflowDetection2[1];\n\n  (0, _react.useEffect)(function () {\n    return setAllSelected(false);\n  }, [numSelectedOnPage, currentPage, rowsPerPage]);\n  var mappedColumns = columns.map(function (_ref7) {\n    var heading = _ref7.heading,\n        accessor = _ref7.accessor,\n        _ref7$key = _ref7.key,\n        key = _ref7$key === void 0 ? typeof accessor === 'string' ? accessor : undefined : _ref7$key,\n        _ref7$component = _ref7.component,\n        component = _ref7$component === void 0 ? typeof accessor === 'function' ? accessor : function (_ref8) {\n      var item = _ref8.item;\n      return _react[\"default\"].createElement(_react[\"default\"].Fragment, null, item[key]);\n    } : _ref7$component,\n        sortable = _ref7.sortable,\n        rest = (0, _objectWithoutProperties2[\"default\"])(_ref7, [\"heading\", \"accessor\", \"key\", \"component\", \"sortable\"]);\n    return _objectSpread({\n      heading: heading,\n      key: key,\n      component: component,\n      sortable: sortable\n    }, rest);\n  });\n\n  var table = _react[\"default\"].createElement(TableContext.Provider, {\n    value: {\n      items: items,\n      selection: selection && _objectSpread({}, selection, {\n        selected: selected,\n        allSelected: allSelected,\n        setAllSelected: setAllSelected\n      }),\n      columns: mappedColumns,\n      pagination: pagination,\n      sorting: {\n        onSortClick: onSortClick\n      }\n    }\n  }, _react[\"default\"].createElement(_EzTable.Container, (0, _extends2[\"default\"])({\n    cols: columns.length,\n    selectable: !!selection,\n    overflowing: isOverflowing,\n    isScrolling: isScrolling\n  }, scrollEvents, {\n    ref: overflowDetection.ref\n  }), _react[\"default\"].createElement(_EzTable.Table, {\n    selectable: !!selection,\n    use: !title ? 'simple' : 'full'\n  }, _react[\"default\"].createElement(Thead, null), _react[\"default\"].createElement(Tbody, null))));\n\n  if (!title) return table;\n  return _react[\"default\"].createElement(_EzCard.EzCard, {\n    title: title,\n    subtitle: subtitle,\n    actions: actions\n  }, _react[\"default\"].createElement(_EzTable.TableCardSection, null, table), pagination && _react[\"default\"].createElement(TablePagination, {\n    pagination: pagination\n  }));\n};\n\nvar _default = EzTable;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}