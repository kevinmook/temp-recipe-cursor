{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"Table\", {\n  enumerable: true,\n  get: function get() {\n    return _EzTable.Table;\n  }\n});\nObject.defineProperty(exports, \"Td\", {\n  enumerable: true,\n  get: function get() {\n    return _EzTable.Td;\n  }\n});\nexports.SpecialInstructions = exports.SummarySection = exports.Total = exports.ItemsSection = void 0;\n\nvar _core = require(\"@emotion/core\");\n\nvar _ = require(\"..\");\n\nvar _EzTable = require(\"../EzTable/EzTable.styles\");\n\nvar _styled = _interopRequireDefault(require(\"../../themes/styled\"));\n/*\n  With table-layout: auto, widths of table cells only shrink to the size of their content,\n  so setting the width to a size smaller than the content size causes the cell to always fit\n  the content and not stretch to fill the available space.\n*/\n\n\nvar cellFitContent = '1%';\nvar ItemsSection = /*#__PURE__*/(0, _styled[\"default\"])(_EzTable.TableCardSection, {\n  target: \"ehxnl6n0\"\n})(\"&& table td{border:none;vertical-align:top;}&& table tr th,&& table tr td{padding:\", function (_ref) {\n  var theme = _ref.theme;\n  return theme.spacing.sm;\n}, \" \", function (_ref2) {\n  var theme = _ref2.theme;\n  return theme.spacing.xs;\n}, \";background-color:\", function (_ref3) {\n  var theme = _ref3.theme;\n  return theme.colors.content.background;\n}, \";}&& table tr th:first-of-type,&& table tr td:first-of-type{padding-left:\", function (_ref4) {\n  var theme = _ref4.theme;\n  return theme.spacing.xs;\n}, \";}&& table tr th:last-of-type,&& table tr td:last-of-type{padding-right:\", function (_ref5) {\n  var theme = _ref5.theme;\n  return theme.spacing.lg;\n}, \";}th:first-of-type,td:first-of-type{width:\", function (_ref6) {\n  var theme = _ref6.theme;\n  return theme.spacing.xl4;\n}, \";}td:last-of-type{width:\", cellFitContent, \";}\");\nexports.ItemsSection = ItemsSection;\nvar Total = /*#__PURE__*/(0, _styled[\"default\"])(\"span\", {\n  target: \"ehxnl6n1\"\n})(\"font-size:\", function (_ref7) {\n  var theme = _ref7.theme;\n  return theme.fontSizes[500];\n}, \";font-weight:\", function (_ref8) {\n  var theme = _ref8.theme;\n  return theme.fontWeights.bold;\n}, \";\"); // left padding here is the fixed width of the first column of the previous table\n// plus the padding of the second column\n\nexports.Total = Total;\n\nvar totals = function totals(_ref9) {\n  var theme = _ref9.theme;\n  return /*#__PURE__*/(0, _core.css)(\"padding-left:calc(\", theme.spacing.xl4, \" + \", theme.spacing.xs, \");table{width:auto;margin-left:calc(\", theme.spacing.xs, \" * -1);margin-right:calc(\", theme.spacing.xs, \" * -1);}th,td{text-align:left;font-weight:normal;width:100%;border:none;padding:\", theme.spacing.xs2, \" \", theme.spacing.xs, \";}td:last-of-type{text-align:right;}tr:nth-of-type(even){background-color:\", theme.colors.grays[100], \";}\");\n};\n\nvar SummarySection = /*#__PURE__*/(0, _styled[\"default\"])(_.EzCardSection, {\n  target: \"ehxnl6n2\"\n})(totals);\nexports.SummarySection = SummarySection;\n\nvar tableware = function tableware(_ref10) {\n  var theme = _ref10.theme;\n  return /*#__PURE__*/(0, _core.css)(\"background-color:\", theme.colors.grays[100], \";border-radius:\", theme.borderRadius[1], \";display:inline-block;font-size:\", theme.fontSizes[200], \";margin-top:\", theme.spacing.xs, \";padding:\", theme.spacing.sm, \" \", theme.spacing.md, \";\");\n};\n\nvar SpecialInstructions = /*#__PURE__*/(0, _styled[\"default\"])(\"div\", {\n  target: \"ehxnl6n3\"\n})(tableware); // EzCard checks for a card section (by displayName), and will wrap if it can't find one\n\nexports.SpecialInstructions = SpecialInstructions;\nItemsSection.displayName = _.EzCardSection.displayName;\nSummarySection.displayName = _.EzCardSection.displayName;","map":null,"metadata":{},"sourceType":"script"}