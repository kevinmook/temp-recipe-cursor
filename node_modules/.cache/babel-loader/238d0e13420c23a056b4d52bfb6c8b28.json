{"ast":null,"code":"import { createComponent } from 'reakit-system/createComponent';\nimport { createHook } from 'reakit-system/createHook';\nimport '../Box/Box.js';\nimport { a as _objectSpread2 } from '../_rollupPluginBabelHelpers-959e870d.js';\nimport 'react';\nimport 'reakit-utils/useForkRef';\nimport 'reakit-utils/isButton';\nimport 'reakit-warning';\nimport 'reakit-utils/useLiveRef';\nimport 'reakit-utils/tabbable';\nimport 'reakit-utils/hasFocusWithin';\nimport '../Tabbable/Tabbable.js';\nimport '../Clickable/Clickable.js';\nimport '../Button/Button.js';\nimport 'reakit-utils/useSealedState';\nimport '../Id/IdProvider.js';\nimport '../Id/IdState.js';\nimport 'reakit-utils/useIsomorphicEffect';\nimport '../Disclosure/DisclosureState.js';\nimport { useDialogState } from './DialogState.js';\nimport { useDisclosure } from '../Disclosure/Disclosure.js';\nvar useDialogDisclosure = createHook({\n  name: \"DialogDisclosure\",\n  compose: useDisclosure,\n  useState: useDialogState,\n  useProps: function useProps(_, htmlProps) {\n    return _objectSpread2({\n      \"aria-haspopup\": \"dialog\"\n    }, htmlProps);\n  }\n});\nvar DialogDisclosure = createComponent({\n  as: \"button\",\n  memo: true,\n  useHook: useDialogDisclosure\n});\nexport { DialogDisclosure, useDialogDisclosure };","map":null,"metadata":{},"sourceType":"module"}