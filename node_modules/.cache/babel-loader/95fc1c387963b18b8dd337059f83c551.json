{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _core = require(\"@emotion/core\");\n\nvar _styledComponentVariant = _interopRequireDefault(require(\"styled-component-variant\"));\n\nvar getValue = function getValue(props, val) {\n  return typeof val === 'function' ? val(props) : val;\n};\n\nvar createMediaQuery = function createMediaQuery(n, styles, reset) {\n  return /*#__PURE__*/(0, _core.css)(\"@media screen and (min-width:\", n, \"){\", reset, \";\", styles, \";}\");\n};\n\nvar _default = function _default(prop, values) {\n  return function (props) {\n    if (!(prop in props)) return undefined;\n    var propValue = props[prop];\n    if (typeof propValue === 'string') return (0, _styledComponentVariant[\"default\"])(prop, values)(props);\n    var base = propValue && propValue.base;\n    if (!base) throw new Error('Argument Error: A base variant must be provided when using responsive props.');\n    var _props$theme = props.theme;\n    _props$theme = _props$theme === void 0 ? {\n      breakpoints: undefined\n    } : _props$theme;\n    var breakpoints = _props$theme.breakpoints;\n    if (!breakpoints) throw new Error('Argument Error: breakpoints must be provided when variant is an Array.');\n    var responsive = Object.keys(breakpoints).reduce(function (styles, breakpointName) {\n      var variantName = propValue[breakpointName];\n      if (!variantName) return styles;\n      return [].concat((0, _toConsumableArray2[\"default\"])(styles), [createMediaQuery(breakpoints[breakpointName], getValue(props, values[variantName]), getValue(props, values.reset))]);\n    }, []);\n    return /*#__PURE__*/(0, _core.css)(getValue(props, values[base]), \";\", responsive, \";\");\n  };\n};\n\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}