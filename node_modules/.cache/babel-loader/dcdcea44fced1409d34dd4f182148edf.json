{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useComboboxFlyout = exports.useComboboxInput = exports.useCombobox = exports.useComboboxState = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = require(\"react\");\n\nvar _Disclosure = require(\"reakit/Disclosure\");\n\nvar _hooks = require(\"../../utils/hooks\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar useComboboxState = function useComboboxState() {\n  // eslint-disable-next-line @typescript-eslint/camelcase\n  var hidden = (0, _Disclosure.useDisclosureState)({\n    unstable_isMounted: true\n  });\n  return _objectSpread({}, hidden);\n};\n\nexports.useComboboxState = useComboboxState;\n\nvar useCombobox = function useCombobox(options, htmlProps) {\n  var ref = (0, _react.useRef)();\n  var optionsRef = (0, _react.useRef)();\n  (0, _hooks.useOnClickOutside)(options.hide, [ref, optionsRef]);\n  (0, _hooks.useEventListenerOutside)(options.hide, 'focusin', [ref, optionsRef]);\n  return _objectSpread({\n    role: 'combobox',\n    ref: ref,\n    optionsRef: optionsRef,\n    'aria-expanded': Boolean(options.visible),\n    'aria-owns': options.unstable_hiddenId\n  }, htmlProps);\n};\n\nexports.useCombobox = useCombobox;\n\nvar useComboboxInput = function useComboboxInput(options, htmlProps) {\n  var ref = (0, _react.useRef)();\n\n  var onKeyDown = function onKeyDown(e) {\n    var keyMap = {\n      Escape: options.hide,\n      ArrowUp: !options.visible && options.show,\n      ArrowDown: !options.visible && options.show,\n      ' ': !options.visible && options.show\n    };\n    var action = keyMap[e.key];\n\n    if (action) {\n      e.preventDefault();\n      action(e);\n    }\n  };\n\n  return _objectSpread({\n    type: 'text',\n    ref: ref,\n    'aria-controls': options.unstable_hiddenId\n  }, htmlProps, {\n    onMouseDown: (0, _hooks.useAllCallbacks)(options.toggle, htmlProps.onMouseDown),\n    onKeyDown: (0, _hooks.useAllCallbacks)(onKeyDown, htmlProps.onKeyDown)\n  });\n};\n\nexports.useComboboxInput = useComboboxInput;\n\nvar useComboboxFlyout = function useComboboxFlyout(options) {\n  var htmlProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  (0, _Disclosure.useDisclosureContent)(options, htmlProps);\n  return {\n    id: options.unstable_hiddenId\n  };\n};\n\nexports.useComboboxFlyout = useComboboxFlyout;","map":null,"metadata":{},"sourceType":"script"}