{"ast":null,"code":"import { createComponent } from 'reakit-system/createComponent';\nimport { createHook } from 'reakit-system/createHook';\nimport { useBox } from '../Box/Box.js';\nimport { _ as _objectWithoutPropertiesLoose, a as _objectSpread2 } from '../_rollupPluginBabelHelpers-959e870d.js';\nimport { useState, useEffect, useCallback } from 'react';\nimport { useLiveRef } from 'reakit-utils/useLiveRef';\nimport 'reakit-utils/useSealedState';\nimport { isSelfTarget } from 'reakit-utils/isSelfTarget';\nimport '../Id/IdProvider.js';\nimport '../Id/IdState.js';\nimport 'reakit-utils/useIsomorphicEffect';\nimport { useDisclosureState } from './DisclosureState.js';\nvar useDisclosureContent = createHook({\n  name: \"DisclosureContent\",\n  compose: useBox,\n  useState: useDisclosureState,\n  useProps: function useProps(options, _ref) {\n    var htmlOnTransitionEnd = _ref.onTransitionEnd,\n        htmlOnAnimationEnd = _ref.onAnimationEnd,\n        htmlStyle = _ref.style,\n        htmlProps = _objectWithoutPropertiesLoose(_ref, [\"onTransitionEnd\", \"onAnimationEnd\", \"style\"]);\n\n    var animating = options.animated && options.animating;\n\n    var _React$useState = useState(null),\n        transition = _React$useState[0],\n        setTransition = _React$useState[1];\n\n    var hidden = !options.visible && !animating;\n    var style = hidden ? _objectSpread2({\n      display: \"none\"\n    }, htmlStyle) : htmlStyle;\n    var onTransitionEndRef = useLiveRef(htmlOnTransitionEnd);\n    var onAnimationEndRef = useLiveRef(htmlOnAnimationEnd);\n    useEffect(function () {\n      if (!options.animated) return undefined;\n      var raf = window.requestAnimationFrame(function () {\n        if (options.visible) {\n          setTransition(\"enter\");\n        } else if (animating) {\n          setTransition(\"leave\");\n        } else {\n          setTransition(null);\n        }\n      });\n      return function () {\n        return window.cancelAnimationFrame(raf);\n      };\n    }, [options.animated, options.visible, animating]);\n    var onEnd = useCallback(function (event) {\n      if (!isSelfTarget(event)) return;\n      if (!animating) return; // Ignores number animated\n\n      if (options.animated === true) {\n        var _options$stopAnimatio;\n\n        (_options$stopAnimatio = options.stopAnimation) === null || _options$stopAnimatio === void 0 ? void 0 : _options$stopAnimatio.call(options);\n      }\n    }, [options.animated, animating, options.stopAnimation]);\n    var onTransitionEnd = useCallback(function (event) {\n      var _onTransitionEndRef$c;\n\n      (_onTransitionEndRef$c = onTransitionEndRef.current) === null || _onTransitionEndRef$c === void 0 ? void 0 : _onTransitionEndRef$c.call(onTransitionEndRef, event);\n      onEnd(event);\n    }, [onEnd]);\n    var onAnimationEnd = useCallback(function (event) {\n      var _onAnimationEndRef$cu;\n\n      (_onAnimationEndRef$cu = onAnimationEndRef.current) === null || _onAnimationEndRef$cu === void 0 ? void 0 : _onAnimationEndRef$cu.call(onAnimationEndRef, event);\n      onEnd(event);\n    }, [onEnd]);\n    return _objectSpread2({\n      id: options.baseId,\n      \"data-enter\": transition === \"enter\" ? \"\" : undefined,\n      \"data-leave\": transition === \"leave\" ? \"\" : undefined,\n      onTransitionEnd: onTransitionEnd,\n      onAnimationEnd: onAnimationEnd,\n      hidden: hidden,\n      style: style\n    }, htmlProps);\n  }\n});\nvar DisclosureContent = createComponent({\n  as: \"div\",\n  useHook: useDisclosureContent\n});\nexport { DisclosureContent, useDisclosureContent };","map":null,"metadata":{},"sourceType":"module"}