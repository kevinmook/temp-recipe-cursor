{"ast":null,"code":"import { createComponent } from 'reakit-system/createComponent';\nimport { createHook } from 'reakit-system/createHook';\nimport '../Box/Box.js';\nimport { _ as _objectWithoutPropertiesLoose, a as _objectSpread2 } from '../_rollupPluginBabelHelpers-959e870d.js';\nimport { useCallback, createElement } from 'react';\nimport 'reakit-utils/useLiveRef';\nimport 'reakit-utils/useSealedState';\nimport 'reakit-utils/isSelfTarget';\nimport '../Id/IdProvider.js';\nimport '../Id/IdState.js';\nimport 'reakit-utils/useIsomorphicEffect';\nimport '../Disclosure/DisclosureState.js';\nimport { useDisclosureContent } from '../Disclosure/DisclosureContent.js';\nimport 'react-dom';\nimport { Portal } from '../Portal/Portal.js';\nimport { useDialogState } from './DialogState.js';\nimport { D as DialogBackdropContext } from '../DialogBackdropContext-2db2c622.js';\nvar useDialogBackdrop = createHook({\n  name: \"DialogBackdrop\",\n  compose: useDisclosureContent,\n  useState: useDialogState,\n  useOptions: function useOptions(_ref) {\n    var _ref$modal = _ref.modal,\n        modal = _ref$modal === void 0 ? true : _ref$modal,\n        options = _objectWithoutPropertiesLoose(_ref, [\"modal\"]);\n\n    return _objectSpread2({\n      modal: modal\n    }, options);\n  },\n  useProps: function useProps(options, _ref2) {\n    var htmlWrapElement = _ref2.wrapElement,\n        htmlProps = _objectWithoutPropertiesLoose(_ref2, [\"wrapElement\"]);\n\n    var wrapElement = useCallback(function (element) {\n      if (options.modal) {\n        element = /*#__PURE__*/createElement(Portal, null, /*#__PURE__*/createElement(DialogBackdropContext.Provider, {\n          value: options.baseId\n        }, element));\n      }\n\n      if (htmlWrapElement) {\n        return htmlWrapElement(element);\n      }\n\n      return element;\n    }, [options.modal, htmlWrapElement]);\n    return _objectSpread2({\n      id: undefined,\n      \"data-dialog-ref\": options.baseId,\n      wrapElement: wrapElement\n    }, htmlProps);\n  }\n});\nvar DialogBackdrop = createComponent({\n  as: \"div\",\n  memo: true,\n  useHook: useDialogBackdrop\n});\nexport { DialogBackdrop, useDialogBackdrop };","map":null,"metadata":{},"sourceType":"module"}