'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var createComponent = require('reakit-system/createComponent');
var createHook = require('reakit-system/createHook');
require('../Box/Box.js');
var _rollupPluginBabelHelpers = require('../_rollupPluginBabelHelpers-770e06b1.js');
require('react');
require('reakit-utils/useForkRef');
require('reakit-utils/isButton');
var reakitWarning = require('reakit-warning');
require('reakit-utils/useLiveRef');
require('reakit-utils/tabbable');
require('reakit-utils/hasFocusWithin');
require('../Tabbable/Tabbable.js');
require('../Clickable/Clickable.js');
require('reakit-utils/useSealedState');
var useCreateElement = require('reakit-system/useCreateElement');
require('reakit-utils/createOnKeyDown');
require('reakit-utils/getDocument');
require('reakit-utils/fireEvent');
require('reakit-utils/fireKeyboardEvent');
require('reakit-utils/isSelfTarget');
require('reakit-utils/applyState');
require('../Id/IdProvider.js');
require('../Id/IdState.js');
require('../CompositeState-d837849c.js');
require('reakit-utils/getActiveElement');
var Composite = require('../Composite/Composite.js');
require('reakit-utils/useIsomorphicEffect');
require('../Group/Group.js');
require('../Id/Id.js');
require('../Composite/CompositeGroup.js');
require('reakit-utils/isTextField');
require('reakit-utils/isPortalEvent');
require('../setTextFieldValue-fc0d2717.js');
require('../Composite/CompositeItem.js');
require('../Composite/CompositeItemWidget.js');
var RadioState = require('./RadioState.js');

var useRadioGroup = createHook.createHook({
  name: "RadioGroup",
  compose: Composite.unstable_useComposite,
  useState: RadioState.useRadioState,
  useProps: function useProps(_, htmlProps) {
    return _rollupPluginBabelHelpers._objectSpread2({
      role: "radiogroup"
    }, htmlProps);
  }
});
var RadioGroup = createComponent.createComponent({
  as: "div",
  useHook: useRadioGroup,
  useCreateElement: function useCreateElement$1(type, props, children) {
    process.env.NODE_ENV !== "production" ? reakitWarning.useWarning(!props["aria-label"] && !props["aria-labelledby"], "You should provide either `aria-label` or `aria-labelledby` props.", "See https://reakit.io/docs/radio") : void 0;
    return useCreateElement.useCreateElement(type, props, children);
  }
});

exports.RadioGroup = RadioGroup;
