'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var createComponent = require('reakit-system/createComponent');
var createHook = require('reakit-system/createHook');
require('../Box/Box.js');
require('../_rollupPluginBabelHelpers-770e06b1.js');
require('react');
require('reakit-utils/useForkRef');
require('reakit-utils/isButton');
var reakitWarning = require('reakit-warning');
require('reakit-utils/useLiveRef');
require('reakit-utils/tabbable');
require('reakit-utils/hasFocusWithin');
require('../Tabbable/Tabbable.js');
require('../Clickable/Clickable.js');
require('../Button/Button.js');
require('reakit-utils/useSealedState');
require('reakit-utils/isSelfTarget');
require('../Id/IdProvider.js');
require('../Id/IdState.js');
require('reakit-utils/useIsomorphicEffect');
require('../Disclosure/DisclosureState.js');
require('../Disclosure/DisclosureContent.js');
var Disclosure = require('../Disclosure/Disclosure.js');
var HiddenState = require('./HiddenState.js');

var useHiddenDisclosure = createHook.createHook({
  name: "HiddenDisclosure",
  compose: Disclosure.useDisclosure,
  useState: HiddenState.useHiddenState,
  useProps: function useProps(_, htmlProps) {
    process.env.NODE_ENV !== "production" ? reakitWarning.warning(true, "`HiddenDisclosure` has been renamed to `Disclosure`. Using `<HiddenDisclosure />` will no longer work in future versions.", "See https://reakit.io/docs/disclosure") : void 0;
    return htmlProps;
  }
});
var HiddenDisclosure = createComponent.createComponent({
  as: "button",
  useHook: useHiddenDisclosure
});

exports.HiddenDisclosure = HiddenDisclosure;
exports.useHiddenDisclosure = useHiddenDisclosure;
