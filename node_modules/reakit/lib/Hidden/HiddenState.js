'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

require('reakit-system/createComponent');
require('reakit-system/createHook');
require('../Box/Box.js');
require('../_rollupPluginBabelHelpers-770e06b1.js');
require('react');
require('reakit-utils/useForkRef');
require('reakit-utils/isButton');
var reakitWarning = require('reakit-warning');
require('reakit-utils/useLiveRef');
require('reakit-utils/tabbable');
require('reakit-utils/hasFocusWithin');
require('../Tabbable/Tabbable.js');
require('../Clickable/Clickable.js');
require('../Button/Button.js');
require('reakit-utils/useSealedState');
require('reakit-utils/isSelfTarget');
require('../Id/IdProvider.js');
require('../Id/IdState.js');
require('reakit-utils/useIsomorphicEffect');
var DisclosureState = require('../Disclosure/DisclosureState.js');
require('../Disclosure/DisclosureContent.js');
require('../Disclosure/Disclosure.js');

function useHiddenState(initialState) {
  if (initialState === void 0) {
    initialState = {};
  }

  process.env.NODE_ENV !== "production" ? reakitWarning.warning(true, "`useHiddenState` has been renamed to `useDisclosureState`. `useHiddenState` will no longer work in future versions.", "See https://reakit.io/docs/disclosure") : void 0;
  return DisclosureState.useDisclosureState(initialState);
}
useHiddenState.__keys = DisclosureState.useDisclosureState.__keys;

exports.useHiddenState = useHiddenState;
