import { createComponent } from 'reakit-system/createComponent';
import { createHook } from 'reakit-system/createHook';
import '../Box/Box.js';
import '../_rollupPluginBabelHelpers-959e870d.js';
import 'react';
import 'reakit-utils/useForkRef';
import 'reakit-utils/isButton';
import 'reakit-warning';
import 'reakit-utils/useLiveRef';
import 'reakit-utils/tabbable';
import 'reakit-utils/hasFocusWithin';
import '../Tabbable/Tabbable.js';
import '../Clickable/Clickable.js';
import 'reakit-utils/useSealedState';
import 'reakit-utils/createOnKeyDown';
import 'reakit-utils/getDocument';
import 'reakit-utils/isSelfTarget';
import 'reakit-utils/applyState';
import '../Id/IdProvider.js';
import '../Id/IdState.js';
import '../CompositeState-de01a7f3.js';
import '../Id/Id.js';
import 'reakit-utils/isTextField';
import 'reakit-utils/isPortalEvent';
import '../setTextFieldValue-78ab5d56.js';
import { unstable_useCompositeItem } from '../Composite/CompositeItem.js';
import { useToolbarState } from './ToolbarState.js';

var useToolbarItem = createHook({
  name: "ToolbarItem",
  compose: unstable_useCompositeItem,
  useState: useToolbarState
});
var ToolbarItem = createComponent({
  as: "button",
  memo: true,
  useHook: useToolbarItem
});

export { ToolbarItem, useToolbarItem };
